{"createdAt":"2025-07-28T10:34:31.089Z","updatedAt":"2025-08-01T12:08:03.339Z","id":"YSGCDKWlU7ZSKMaF","name":"Document checker","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $('When Executed by Another Workflow').first().json.text || $('Extract from File1').first().json.text }}","options":{"systemMessage":"=Today's date: {{ $today }}\n\nYou are a compliance assistant for waste classification. Given only the raw text of a waste classification report, extract and report the following:\n\n1. Report Date\n- Find the main report date (issue date, revision date, or signature date).\n- If the date is more than 2 years ago, label it as \"TOO OLD\". Otherwise, label as \"VALID\".\n\n2. Mandatory Sections\nFor each required section, check if it is present anywhere in the text (including appendices or attachments). Accept close matches:\n- Chain of Custody\n- Certificate Analysis (also accept \"Laboratory Results\", \"Certificates of Analysis\", \"Lab Reports\")\n- Site History (also accept \"Introduction\" or \"Background\" or \"Site Description\" if describing site/project history)\n\nFor each, return:\n- Whether it is Found or Not Found\n- The actual section heading and page/location (if mentioned)\n- If not found, say \"Not Found\"\n\n3. Extract if present:\n- Waste volumes (with units, e.g., tons, m3)\n- Waste areas (with units, e.g., ha, m2)\n- Consultant name\n- All found dates (report date, sampling dates, etc.)\n\n4. Output Format\nReturn everything in this template:\n\n# Document Compliance Check\n\n## Report Date\n{date} ({status})\n\n## Mandatory Sections\n- Chain of Custody: {Found/Not Found} ({section heading/location or \"Not Found\"})\n- Certificate Analysis: {Found/Not Found} ({section heading/location or \"Not Found\"})\n- Site History: {Found/Not Found} ({section heading/location or \"Not Found\"})\n\n## Key Information\n- Waste Volumes: {text or \"Not Found\"}\n- Waste Areas: {text or \"Not Found\"}\n- Consultant Name: {text or \"Not Found\"}\n- All Dates Found: {comma-separated list or \"Not Found\"}\n\nInstructions:\n- Do not summarize or comment.\n- Do not make up content—only report what is present.\n- If a heading is similar but not exact, return the actual heading."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-4032,-2488],"id":"9017ea6e-dcbc-4b7d-b208-e94266058986","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-3936,-2264],"id":"7c7666f4-2aa3-4ead-ad34-fdb2dc1be04d","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"operation":"pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-3408,-3364],"id":"f395c480-bbc7-467a-864d-64cea33af2a7","name":"Extract from File1"},{"parameters":{"jsCode":"// Get markdown from the previous node (change the key if yours is different)\nconst md = $input.first().json.output || \"\";\n\n// Helper to extract values using regex\nfunction extract(regex, input) {\n  const match = input.match(regex);\n  return match ? match[1].trim() : null;\n}\n\n// Extract report date and status\nconst dateMatch = md.match(/## Report Date\\s*([\\s\\S]+?)\\((VALID|TOO OLD)\\)/i);\nconst reportDate = dateMatch ? dateMatch[1].trim() : null;\nconst reportStatus = dateMatch ? dateMatch[2].trim() : null;\n\n// Extract mandatory sections (Chain of Custody, Certificate Analysis, Site History)\nconst chainMatch = md.match(/Chain of Custody:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst chainStatus = chainMatch ? chainMatch[1].trim() : null;\nconst chainDetails = chainMatch ? chainMatch[2].trim() : null;\n\nconst certMatch = md.match(/Certificate Analysis:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst certStatus = certMatch ? certMatch[1].trim() : null;\nconst certDetails = certMatch ? certMatch[2].trim() : null;\n\nconst siteMatch = md.match(/Site History:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst siteStatus = siteMatch ? siteMatch[1].trim() : null;\nconst siteDetails = siteMatch ? siteMatch[2].trim() : null;\n\n// Optional: Waste Volumes, Areas, Consultant Name\nconst wasteVolume = extract(/Waste Volumes:\\s*([^\\n]+)/i, md);\nconst wasteAreas = extract(/Waste Areas:\\s*([^\\n]+)/i, md);\nconst consultant = extract(/Consultant Name:\\s*([^\\n]+)/i, md);\n\n// Output JSON for easy use in IF nodes or next steps\nreturn [\n  {\n    reportDate,\n    reportStatus,\n    chainStatus,\n    chainDetails,\n    certStatus,\n    certDetails,\n    siteStatus,\n    siteDetails,\n    wasteVolume,\n    wasteAreas,\n    consultant\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-3632,-2488],"id":"eefd65c8-b97c-4684-8695-ed3dbc5ca97e","name":"Code"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"abb2d357-3694-4200-9667-eefd17de2dc7","leftValue":"={{ $json.reportStatus }}","rightValue":"TOO OLD","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"abd287d8-3bf3-43fb-a3fd-f84790a18f2d","leftValue":"={{ $json.chainStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"32e13b5e-4ffd-4342-b377-32c02e4bfed7","leftValue":"={{ $json.certStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"05bae99f-086e-4e64-b231-14caaaddfe62","leftValue":"={{ $json.siteStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"or"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-3408,-2488],"id":"07b582d0-602e-4fe3-aa64-8ef6fe619338","name":"If"},{"parameters":{"sendTo":"shreyansh@gammastack.com","subject":" Request for Updated Report and Missing Information","message":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[-2784,-2636],"id":"c162b9b9-9742-4224-8246-ba21b50ac70d","name":"Send a message","webhookId":"ce3dc8da-9235-4f21-90bd-82ff1b020745","credentials":{"gmailOAuth2":{"id":"g60VLt9jxOFvg1X1","name":"Gluagents Gmail"}}},{"parameters":{"workflowInputs":{"values":[{"name":"text"},{"name":"chatId"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-4256,-2488],"id":"f586590d-29fc-40e8-9c84-de4cf6e08ab7","name":"When Executed by Another Workflow"},{"parameters":{"assignments":{"assignments":[{"id":"1fe8ea2b-3f54-460c-8d08-8e487837a563","name":"output","value":"={{ $('AI Agent').item.json.output }}","type":"string"},{"id":"8cbd7893-bde1-47c0-9c2d-9e6975d25f68","name":"Completed","value":false,"type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2560,-2636],"id":"ec8e77a8-c7db-498e-bb6b-b4e35e1c2918","name":"Edit Fields"},{"parameters":{"assignments":{"assignments":[{"id":"7b89829c-bf0c-4664-85ea-b5bb0ea19b50","name":"output","value":"={{ $('AI Agent').item.json.output }}","type":"string"},{"id":"4d4c897e-0ddf-4cdf-a46e-d196f72450de","name":"Completed","value":true,"type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3096,-2340],"id":"0fa6c707-6283-4087-8487-932cf117cc03","name":"Edit Fields1"},{"parameters":{"promptType":"define","text":"=waste classification document compliance check summary:: {{ $('AI Agent').item.json.output }}","options":{"systemMessage":"=You are a compliance assistant.\n\nYou will receive a waste classification document compliance check summary.\nDraft a clear and professional email to the report submitter if the report is too old and/or if any required section is missing.\n\nInstructions:\n\nBegin with a polite greeting such as “Hello,”.\n\nIf the report is marked as “TOO OLD,” clearly mention that the report cannot be accepted due to its age.\n\nIf any mandatory section is marked “Not Found,” list only those missing sections in a clear bullet list.\n\nDo not mention any sections that are marked as “Found”.\n\nAsk the recipient to provide an updated and complete report including all required information as soon as possible.\n\nUse a professional, concise, and helpful tone.\n\nClose with a polite thank you and “Best regards”.\n\nDo not reference AI, automation, or personal names.\n\nInput:\nYou will receive a summary like this:\n\n# Document Compliance Check\n\n## Report Date\n10 February 2019 (TOO OLD)\n\n## Mandatory Sections\n- Chain of Custody: Not Found (Not Present)\n- Certificate Analysis: Found (Appendix C)\n- Site History: Not Found (Not Present)\nYour output should be an email like this:\nHello,\n\nThank you for your recent submission of the waste classification report.\n\nUpon review, we have identified the following issues:\n\nThe report provided is more than two years old and cannot be accepted.\n\nThe following required section(s) are missing:\n\nChain of Custody\n\nSite History\n\nPlease provide an updated report with all required sections and current information at your earliest convenience.\n\nThank you for your attention to this matter.\n\nBest regards\n\nUse only the information from the compliance summary.\nNever mention sections that are marked as “Found”.\nDo not include names, sign-offs, or any information not in the template above."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-3184,-2740],"id":"d67696d7-bd68-4212-8924-8c60f1baaafd","name":"AI Agent1"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-3088,-2516],"id":"4a719b6e-5ecd-40b1-a9c8-d1b8cce0619f","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-4256,-3216],"id":"c59974c2-c1c5-418e-9c09-fcfb39b3d156","name":"Telegram Trigger","webhookId":"bf697917-2376-492c-9d80-6f567bfe63d2","credentials":{"telegramApi":{"id":"I2PMmz1t790ehVom","name":"Document Checker Bot"}}},{"parameters":{"resource":"file","fileId":"={{ $('Telegram Trigger').item.json.message.document.file_id }}"},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-3720,-3364],"id":"d1fba5ce-e91a-407d-9b32-f3780009160e","name":"get pdf file","webhookId":"be551ee1-f9dc-450e-88b1-c39577414b80","credentials":{"telegramApi":{"id":"I2PMmz1t790ehVom","name":"Document Checker Bot"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0d3030a1-e37d-4ecd-bdba-558234d6ae80","leftValue":"={{ $json.message.document.mime_type }}","rightValue":"application/pdf","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.text }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true},"id":"4fa469c8-a6a7-4c96-b976-d1659ee3821c"}],"combinator":"and"},"renameOutput":true,"outputKey":"={{ $json.message.text }}"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-4032,-3216],"id":"bb24ee75-34da-4570-a562-f0faa79e25f7","name":"master router switch"},{"parameters":{"promptType":"define","text":"={{ $json.message.text }}","options":{"systemMessage":"You are a helpful assistant\nGreet user and tell him to upload a waste report."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-3808,-3068],"id":"529d7db8-2e9a-4430-92e3-0cb71a9ff0db","name":"AI Agent2"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-3712,-2844],"id":"ea793f12-f992-416c-9ca1-f6c42f660dad","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').first().json.message.chat.id }}","text":"={{ $json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-3408,-3068],"id":"c995e124-78db-4181-bc68-18490369828f","name":"pdf_reports_response_node2","webhookId":"03191d51-43e9-4b10-875e-9c2ba6c37363","credentials":{"telegramApi":{"id":"I2PMmz1t790ehVom","name":"Document Checker Bot"}}},{"parameters":{"promptType":"define","text":"={{ $json.text }}","options":{"systemMessage":"=Today's date: {{ $today }}\n\nYou are a compliance assistant for waste classification. Given only the raw text of a waste classification report, extract and report the following:\n\n1. Report Date\n- Find the main report date (issue date, revision date, or signature date).\n- If the date is more than 2 years ago, label it as \"TOO OLD\". Otherwise, label as \"VALID\".\n\n2. Mandatory Sections\nFor each required section, check if it is present anywhere in the text (including appendices or attachments). Accept close matches:\n- Chain of Custody\n- Certificate Analysis (also accept \"Laboratory Results\", \"Certificates of Analysis\", \"Lab Reports\")\n- Site History (also accept \"Introduction\" or \"Background\" or \"Site Description\" if describing site/project history)\n\nFor each, return:\n- Whether it is Found or Not Found\n- The actual section heading and page/location (if mentioned)\n- If not found, say \"Not Found\"\n\n3. Extract if present:\n- Waste volumes (with units, e.g., tons, m3)\n- Waste areas (with units, e.g., ha, m2)\n- Consultant name\n- All found dates (report date, sampling dates, etc.)\n\n4. Output Format\nReturn everything in this template:\n\n# Document Compliance Check\n\n## Report Date\n{date} ({status})\n\n## Mandatory Sections\n- Chain of Custody: {Found/Not Found} ({section heading/location or \"Not Found\"})\n- Certificate Analysis: {Found/Not Found} ({section heading/location or \"Not Found\"})\n- Site History: {Found/Not Found} ({section heading/location or \"Not Found\"})\n\n## Key Information\n- Waste Volumes: {text or \"Not Found\"}\n- Waste Areas: {text or \"Not Found\"}\n- Consultant Name: {text or \"Not Found\"}\n- All Dates Found: {comma-separated list or \"Not Found\"}\n\nInstructions:\n- Do not summarize or comment.\n- Do not make up content—only report what is present.\n- If a heading is similar but not exact, return the actual heading."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-3184,-3364],"id":"d7114466-41e1-4eda-a904-e89847b7bc95","name":"AI Agent3"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-3088,-3140],"id":"1b44fcdd-d18f-41b4-95c3-4960ddd614ad","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"// Get markdown from the previous node (change the key if yours is different)\nconst md = $input.first().json.output || \"\";\n\n// Helper to extract values using regex\nfunction extract(regex, input) {\n  const match = input.match(regex);\n  return match ? match[1].trim() : null;\n}\n\n// Extract report date and status\nconst dateMatch = md.match(/## Report Date\\s*([\\s\\S]+?)\\((VALID|TOO OLD)\\)/i);\nconst reportDate = dateMatch ? dateMatch[1].trim() : null;\nconst reportStatus = dateMatch ? dateMatch[2].trim() : null;\n\n// Extract mandatory sections (Chain of Custody, Certificate Analysis, Site History)\nconst chainMatch = md.match(/Chain of Custody:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst chainStatus = chainMatch ? chainMatch[1].trim() : null;\nconst chainDetails = chainMatch ? chainMatch[2].trim() : null;\n\nconst certMatch = md.match(/Certificate Analysis:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst certStatus = certMatch ? certMatch[1].trim() : null;\nconst certDetails = certMatch ? certMatch[2].trim() : null;\n\nconst siteMatch = md.match(/Site History:\\s*(Found|Not Found)[^(]*\\(([^)]*)\\)/i);\nconst siteStatus = siteMatch ? siteMatch[1].trim() : null;\nconst siteDetails = siteMatch ? siteMatch[2].trim() : null;\n\n// Optional: Waste Volumes, Areas, Consultant Name\nconst wasteVolume = extract(/Waste Volumes:\\s*([^\\n]+)/i, md);\nconst wasteAreas = extract(/Waste Areas:\\s*([^\\n]+)/i, md);\nconst consultant = extract(/Consultant Name:\\s*([^\\n]+)/i, md);\n\n// Output JSON for easy use in IF nodes or next steps\nreturn [\n  {\n    reportDate,\n    reportStatus,\n    chainStatus,\n    chainDetails,\n    certStatus,\n    certDetails,\n    siteStatus,\n    siteDetails,\n    wasteVolume,\n    wasteAreas,\n    consultant\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2784,-3364],"id":"b95bb027-4b45-4b4a-b2e5-7b2121785648","name":"Code1"},{"parameters":{"conditions":{"options":{"caseSensitive":false,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"abb2d357-3694-4200-9667-eefd17de2dc7","leftValue":"={{ $json.reportStatus }}","rightValue":"TOO OLD","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"abd287d8-3bf3-43fb-a3fd-f84790a18f2d","leftValue":"={{ $json.chainStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"32e13b5e-4ffd-4342-b377-32c02e4bfed7","leftValue":"={{ $json.certStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"05bae99f-086e-4e64-b231-14caaaddfe62","leftValue":"={{ $json.siteStatus }}","rightValue":"Not found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"or"},"options":{"ignoreCase":true}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-2560,-3364],"id":"f488df93-0598-43a5-8d94-93710b6ca0fa","name":"If4"},{"parameters":{"sendTo":"shreyansh@gammastack.com","subject":" Request for Updated Report and Missing Information","message":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[-1936,-3512],"id":"a0988ebc-2ef4-4277-8623-b433e5b48766","name":"Send a message1","webhookId":"ce3dc8da-9235-4f21-90bd-82ff1b020745","credentials":{"gmailOAuth2":{"id":"g60VLt9jxOFvg1X1","name":"Gluagents Gmail"}}},{"parameters":{"promptType":"define","text":"=waste classification document compliance check summary:: {{ $('AI Agent3').item.json.output }}","options":{"systemMessage":"=You are a compliance assistant.\n\nYou will receive a waste classification document compliance check summary.\nDraft a clear and professional email to the report submitter if the report is too old and/or if any required section is missing.\n\nInstructions:\n\nBegin with a polite greeting such as “Hello,”.\n\nIf the report is marked as “TOO OLD,” clearly mention that the report cannot be accepted due to its age.\n\nIf any mandatory section is marked “Not Found,” list only those missing sections in a clear bullet list.\n\nDo not mention any sections that are marked as “Found”.\n\nAsk the recipient to provide an updated and complete report including all required information as soon as possible.\n\nUse a professional, concise, and helpful tone.\n\nClose with a polite thank you and “Best regards”.\n\nDo not reference AI, automation, or personal names.\n\nInput:\nYou will receive a summary like this:\n\n# Document Compliance Check\n\n## Report Date\n10 February 2019 (TOO OLD)\n\n## Mandatory Sections\n- Chain of Custody: Not Found (Not Present)\n- Certificate Analysis: Found (Appendix C)\n- Site History: Not Found (Not Present)\nYour output should be an email like this:\nHello,\n\nThank you for your recent submission of the waste classification report.\n\nUpon review, we have identified the following issues:\n\nThe report provided is more than two years old and cannot be accepted.\n\nThe following required section(s) are missing:\n\nChain of Custody\n\nSite History\n\nPlease provide an updated report with all required sections and current information at your earliest convenience.\n\nThank you for your attention to this matter.\n\nBest regards\n\nUse only the information from the compliance summary.\nNever mention sections that are marked as “Found”.\nDo not include names, sign-offs, or any information not in the template above."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-2336,-3616],"id":"9cc1f921-facb-4885-8871-497b9dda28cc","name":"AI Agent4"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2240,-3392],"id":"f1e33f68-3c01-457a-a53f-317d37a2b0f7","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').first().json.message.chat.id }}","text":"={{ $('AI Agent3').item.json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-1712,-3512],"id":"382cab71-e71e-405b-aa1e-2f9b8901e390","name":"pdf_reports_response_node3","webhookId":"03191d51-43e9-4b10-875e-9c2ba6c37363","credentials":{"telegramApi":{"id":"I2PMmz1t790ehVom","name":"Document Checker Bot"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').first().json.message.chat.id }}","text":"={{ $('AI Agent3').item.json.output }}","additionalFields":{"appendAttribution":false}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-2248,-3216],"id":"dc25fedd-cc41-476a-8639-7851d8b3c134","name":"pdf_reports_response_node4","webhookId":"03191d51-43e9-4b10-875e-9c2ba6c37363","credentials":{"telegramApi":{"id":"I2PMmz1t790ehVom","name":"Document Checker Bot"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Extract from File1":{"main":[[{"node":"AI Agent3","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"AI Agent1","type":"main","index":0}],[{"node":"Edit Fields1","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Send a message":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"Send a message","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"Edit Fields":{"main":[[]]},"Telegram Trigger":{"main":[[{"node":"master router switch","type":"main","index":0}]]},"get pdf file":{"main":[[{"node":"Extract from File1","type":"main","index":0}]]},"master router switch":{"main":[[{"node":"get pdf file","type":"main","index":0}],[{"node":"AI Agent2","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"AI Agent2":{"main":[[{"node":"pdf_reports_response_node2","type":"main","index":0}]]},"AI Agent3":{"main":[[{"node":"Code1","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"AI Agent3","type":"ai_languageModel","index":0}]]},"Code1":{"main":[[{"node":"If4","type":"main","index":0}]]},"If4":{"main":[[{"node":"AI Agent4","type":"main","index":0}],[{"node":"pdf_reports_response_node4","type":"main","index":0}]]},"Send a message1":{"main":[[{"node":"pdf_reports_response_node3","type":"main","index":0}]]},"AI Agent4":{"main":[[{"node":"Send a message1","type":"main","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"AI Agent4","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"98201112-19ae-40e0-ac8a-fe2c961ba930","triggerCount":1,"tags":[]}