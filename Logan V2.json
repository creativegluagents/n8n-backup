{"createdAt":"2025-08-04T09:13:31.079Z","updatedAt":"2025-08-08T12:55:15.789Z","id":"QBAY3lJRkebdOVnR","name":"Logan V2","active":true,"isArchived":false,"nodes":[{"parameters":{"operation":"search","base":{"__rl":true,"value":"apptwzu0VB7K2LVx5","mode":"list","cachedResultName":"Logan V2","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5"},"table":{"__rl":true,"value":"tblTDyTkeg5lK6T3s","mode":"list","cachedResultName":"Inventory","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5/tblTDyTkeg5lK6T3s"},"options":{"fields":["id","name","quantity","vendor","row","rack","shelf","position"]}},"type":"n8n-nodes-base.airtable","typeVersion":2.1,"position":[-2000,144],"id":"af5cc85d-f22a-42ef-b69a-c78e7c0807b7","name":"Search records","alwaysOutputData":true,"credentials":{"airtableTokenApi":{"id":"bDVfyeKNIcs0NKE7","name":"Gluagents Airtable"}}},{"parameters":{"aggregate":"aggregateAllItemData","include":"allFieldsExcept","fieldsToExclude":"createdTime","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-1776,144],"id":"6b54e89b-9488-4947-8da0-ac1c0bcbaadc","name":"Aggregate","alwaysOutputData":true},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"value":"chatgpt-4o-latest","mode":"list","cachedResultName":"CHATGPT-4O-LATEST"},"text":"=From the given image, generate a list of items in the following format:\nname, quantity, vendor\n\nHere, vendor refers to the company that the particular item belongs to (not the packing list).\n\nReturn the result as plain CSV with appropriate headers and no additional text.\n","inputType":"base64","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[160,-996],"id":"924c9669-b9bb-412e-ba6c-295b0a02f90f","name":"Extract items","retryOnFail":false,"credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}},"onError":"continueErrorOutput"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[384,-896],"id":"53235789-2e68-4546-80a3-5c905473b29c","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"promptType":"define","text":"={{ $json.content }}","options":{"systemMessage":"=Add all the items from the given list to the inventory.\n\nFirst name of user: {{ $('Telegram trigger').first().json.message.chat.first_name }}","returnIntermediateSteps":true}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[440,-1120],"id":"dbfba803-ba83-456c-985f-0c581e6a12a7","name":"Store items from packing list","retryOnFail":false,"onError":"continueErrorOutput"},{"parameters":{"promptType":"define","text":"={{ $('Telegram trigger').first().json.message.text }}","options":{"systemMessage":"=You are a helpful AI assistant for managing inventory with the following functionality:\n- Can store multiple inventory items by uploading a packing list image with the phrase \"packing list\" in the caption.\n- Can also update or create individual inventory items by uploading item images with the item's name in the caption.\n- Offer assistance if the users want to query or update inventory data.\n\n- Shortcut way to refer any location for inventory items is using a string consisting 4 parts in the format row-rack-shelf-position. For example, \"A25C\" is Row A, Rack 2, Shelf 5 & Position C.\n\n- You can find item id by loading all the items.\n\nDo not mention any technical details or internal processing. Keep the tone friendly, clear, and supportive.\n\nFirst name of user: {{ $('Telegram trigger').first().json.message.chat.first_name }}","returnIntermediateSteps":true}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[440,-184],"id":"6eb2735a-4a54-43af-a3f0-0472d8ef7fc6","name":"Process text message","retryOnFail":false,"onError":"continueErrorOutput"},{"parameters":{"promptType":"define","text":"={{ $json.itemInfo }}","options":{"systemMessage":"=You are an AI inventory assistant. The user will provide an item info and an image URL. Your task is to:\n\n- Fuzzy match the given info against existing inventory items.\n- If a close match is found, update that item using the new image.\n- If no suitable match exists, create a new inventory item with the provided info and image.\n\n- Shortcut way to refer any location for inventory items is using a string consisting 4 parts in the format row-bay-shelf-position. For example, \"A25C\" is Row A, Bay 2, Shelf 5 & Position C.\n\nYou must always call the tool `load_all_items` to find the current list of items, and based on the current items list + user input, you should ALWAYS call either the `add_item` or `modify_item` tool.\n\nAcknowledge the action taken (update or create) clearly. Do not mention fuzzy matching, database logic, or any technical operations. Keep all responses simple, human-readable, and outcome-focused.\n\nFirst name of user: {{ $('Telegram trigger').first().json.message.chat.first_name }}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[440,-688],"id":"441f10c9-69c9-4594-935f-cf50525c2fb9","name":"Process Item Image","executeOnce":true,"onError":"continueErrorOutput"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[384,-464],"id":"25af5ba0-f25c-41b6-a529-138f9f1cf376","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"caf9b64c-4d2a-45b1-8f7c-05a3d9253517","leftValue":"={{ $('AI Agent').item.json.output.state }}","rightValue":"process_packing_list","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-512,-852],"id":"1bfae22f-8827-472b-8c54-8f4d6156a67c","name":"Is packing list"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram trigger').first().json.message.chat.id }}","tableName":"logan_v2_chat_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[512,-464],"id":"895ec6f4-6f10-4024-bd9d-13d266be1a93","name":"Postgres Chat Memory1","credentials":{"postgres":{"id":"wO8bHC1OHkCa7Wux","name":"Gluagents Supabase"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram trigger').first().json.message.chat.id }}","tableName":"logan_v2_chat_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[512,40],"id":"e7f2ce8b-dfd0-4dbd-9315-ce0cf9e778c0","name":"Postgres Chat Memory2","credentials":{"postgres":{"id":"wO8bHC1OHkCa7Wux","name":"Gluagents Supabase"}}},{"parameters":{"chatId":"={{ $('Telegram trigger').first().json.message.chat.id }}","text":"={{ $json.output }}","replyMarkup":"replyKeyboard","replyKeyboard":{"rows":[{"row":{"buttons":[{"text":"I want to add new inventory item(s).","additionalFields":{}}]}},{"row":{"buttons":[{"text":"I want to update existing items in the inventory.","additionalFields":{}}]}},{"row":{"buttons":[{"text":"I want to upload a packing list image","additionalFields":{}}]}}]},"replyKeyboardOptions":{},"additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[848,-452],"id":"44102bfc-318b-4822-a9bb-996c2f702c1d","name":"Send response","webhookId":"951e2ef3-c292-464c-9e25-531e7d60d4d2","credentials":{"telegramApi":{"id":"3bl0ZiRunXRoY612","name":"Logan V2 Telegram"}}},{"parameters":{"chatId":"={{ $('Telegram trigger').first().json.message.chat.id }}","text":"=Something went wrong, please try again.","additionalFields":{"appendAttribution":false,"parse_mode":"HTML"}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[848,-824],"id":"6f47efe2-cf6e-48a0-9987-c75c2b7caff4","name":"Set error","webhookId":"951e2ef3-c292-464c-9e25-531e7d60d4d2","credentials":{"telegramApi":{"id":"3bl0ZiRunXRoY612","name":"Logan V2 Telegram"}}},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[384,40],"id":"a372a242-bb6f-4980-a029-ba8b7bc81687","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram trigger').first().json.message.chat.id }}","tableName":"logan_v2_chat_histories"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[512,-896],"id":"f80a11d8-dd50-46cb-a9fd-d1e0a07f1ced","name":"Postgres Chat Memory3","credentials":{"postgres":{"id":"wO8bHC1OHkCa7Wux","name":"Gluagents Supabase"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-2000,-652],"id":"a3611071-1d9f-4dbd-be78-e5298ea86398","name":"Telegram trigger","webhookId":"4b2230e3-b32d-4344-b5a6-89aac0816d84","credentials":{"telegramApi":{"id":"3bl0ZiRunXRoY612","name":"Logan V2 Telegram"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"d9841de9-a495-4eba-a4fa-f95b9ba6eea2","leftValue":"={{ $('Telegram trigger').first().json.message.photo }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1184,-652],"id":"54d3e0b5-450b-4fb1-bd86-4280851c4d35","name":"Has image","retryOnFail":false},{"parameters":{"resource":"file","fileId":"={{ $('Telegram trigger').first().json.message.photo[$('Telegram trigger').first().json.message.photo.length - 1].file_id }}","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-960,-852],"id":"6e9f4521-e7db-4bdd-a1b9-d198e09d5885","name":"Download image","webhookId":"001dc3b8-048f-4950-84fe-625719523558","retryOnFail":true,"credentials":{"telegramApi":{"id":"3bl0ZiRunXRoY612","name":"Logan V2 Telegram"}}},{"parameters":{"jsCode":"// Access the binary data\nconst binaryData = items[0].binary.data;\n\n// Set the correct MIME type\nbinaryData.mimeType = 'image/jpeg'; // or 'image/png', depending on your file\n\nreturn items;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-736,-852],"id":"e522edf3-bf8b-4e11-8f2c-cac95dc9a001","name":"convert MIME type"},{"parameters":{"name":"={{ $('Telegram trigger').first().json.message.photo[$('Telegram trigger').first().json.message.photo.length - 1].file_id }}","driveId":{"__rl":true,"value":"My Drive","mode":"list","cachedResultName":"My Drive","cachedResultUrl":"https://drive.google.com/drive/my-drive"},"folderId":{"__rl":true,"value":"1E9MiTFNyM4lQpLFoZB75uLhD06pjXz5Q","mode":"list","cachedResultName":"Logan","cachedResultUrl":"https://drive.google.com/drive/folders/1E9MiTFNyM4lQpLFoZB75uLhD06pjXz5Q"},"options":{"simplifyOutput":true}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-288,-584],"id":"aef41816-17a1-4113-ac1e-8b33b7ff00ec","name":"Upload file","credentials":{"googleDriveOAuth2Api":{"id":"qcOZdQi2uh2moX25","name":"Gluagents Google Drive"}}},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"value":"chatgpt-4o-latest","mode":"list","cachedResultName":"CHATGPT-4O-LATEST"},"text":"Check for any barcode in the given image. Your output should be blank if no barcode is detected, otherwise just the results after scanning the barcode with no additional text.","imageUrls":"=https://drive.google.com/uc?export=download&id={{ $json.id }}","options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[-64,-584],"id":"0bd06b91-9d9e-4a08-b7c5-8f059b2ff0c0","name":"Extract barcode info","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"assignments":{"assignments":[{"id":"23acba35-3191-4b95-9786-46af81ac1c05","name":"itemInfo","value":"=Item info: {{ $('Telegram trigger').first().json.message.caption }}\n\nImage URL: https://drive.google.com/file/d/{{ $('Upload file').item.json.id }}/view\n\n{{ $if($('Extract barcode info').item?.json?.content.length > 0, `Item location: ${$('Extract barcode info').item.json.content}`, \"\") }}\n","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[160,-584],"id":"b93d3e55-1e32-4c7a-aaff-f8286a545154","name":"Set item info"},{"parameters":{"sseEndpoint":"https://sleepsleeves.com/sse"},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[640,-464],"id":"8cad273a-64dd-4065-9c1a-e7e43566d7c9","name":"Add or modify item","retryOnFail":true},{"parameters":{"sseEndpoint":"https://sleepsleeves.com/sse","include":"selected","includeTools":["add_item"]},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[640,-896],"id":"00f1ad21-21fb-4341-915c-4cab198756db","name":"Add item","retryOnFail":true},{"parameters":{"sseEndpoint":"https://sleepsleeves.com/sse"},"type":"@n8n/n8n-nodes-langchain.mcpClientTool","typeVersion":1,"position":[640,40],"id":"4e384004-ce7d-46e3-ae62-8b21c88bae6d","name":"MCP Client","retryOnFail":true},{"parameters":{"promptType":"define","text":"={{ $('Telegram trigger').first().json.message.text || $('Telegram trigger').first().json.message.caption || \".\" }}","hasOutputParser":true,"options":{"systemMessage":"=Track the user’s current session state. If their latest message indicates switching to another operation, update the state.\n\nStates:\n\n* add_items – Adding new items.\n* update_items – Updating existing items.\n* process_packing_list – Processing a packing list.\n* query_inventory – Checking inventory details.\n\nAlways reply with a short, friendly description of the **current** state, whether changed or not. Keep it clear and supportive.\n\nExamples:\n\n* add_items → \"You are adding new items to the inventory. To do something else, please choose a different option from the menu.\"\n* update_items → \"You are updating existing items. To perform other operations, please select a different option from the menu.\"\n* process_packing_list → \"You are processing a packing list. To switch tasks, please select another option from the menu.\"\n* query_inventory → \"You are checking inventory details. To do something else, please choose another option from the menu.\"\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-1656,-652],"id":"2dcede21-76f7-4a94-95fe-028f4ddf7233","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-1776,-428],"id":"081c1091-d50d-4187-ab45-3a63e94fb605","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"operation":"upsert","base":{"__rl":true,"value":"apptwzu0VB7K2LVx5","mode":"list","cachedResultName":"Logan V2","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5"},"table":{"__rl":true,"value":"tbl8SdTgYKs6PGKV0","mode":"list","cachedResultName":"Session State","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5/tbl8SdTgYKs6PGKV0"},"columns":{"mappingMode":"defineBelow","value":{"Session ID":"={{ $('Telegram trigger').first().json.message.chat.id.toString() }}","State":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('State', ``, 'string') }}"},"matchingColumns":["Session ID"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"string","readOnly":true,"removed":true},{"id":"Session ID","displayName":"Session ID","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false},{"id":"State","displayName":"State","required":false,"defaultMatch":false,"canBeUsedToMatch":true,"display":true,"type":"string","readOnly":false,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.airtableTool","typeVersion":2.1,"position":[-1648,-428],"id":"8600d857-ae0e-463e-9b9e-ac617d02ba13","name":"Update state","credentials":{"airtableTokenApi":{"id":"bDVfyeKNIcs0NKE7","name":"Gluagents Airtable"}}},{"parameters":{"schemaType":"manual","inputSchema":"{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"state\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"The current session state name, e.g., add_items, update_items, process_packing_list, query_inventory, upload_item_image.\"\n\t\t},\n\t\t\"description\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"A short, friendly message explaining the current state to the user.\"\n\t\t}\n\t},\n\t\"required\": [\"state\", \"description\"]\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[-1392,-428],"id":"667025bb-4c33-48a4-b9fd-c148ceed924b","name":"Structured Output Parser"},{"parameters":{"operation":"search","base":{"__rl":true,"value":"apptwzu0VB7K2LVx5","mode":"list","cachedResultName":"Logan V2","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5"},"table":{"__rl":true,"value":"tbl8SdTgYKs6PGKV0","mode":"list","cachedResultName":"Session State","cachedResultUrl":"https://airtable.com/apptwzu0VB7K2LVx5/tbl8SdTgYKs6PGKV0"},"filterByFormula":"={Session Id} = {{ $('Telegram trigger').first().json.message.chat.id }}","options":{}},"type":"n8n-nodes-base.airtableTool","typeVersion":2.1,"position":[-1520,-428],"id":"c9e055c7-e2f9-4691-aa0b-4f038611aeb1","name":"Load current state","credentials":{"airtableTokenApi":{"id":"bDVfyeKNIcs0NKE7","name":"Gluagents Airtable"}}}],"connections":{"Search records":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"Aggregate":{"main":[[]]},"Extract items":{"main":[[{"node":"Store items from packing list","type":"main","index":0}],[{"node":"Set error","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Store items from packing list","type":"ai_languageModel","index":0}]]},"Store items from packing list":{"main":[[{"node":"Send response","type":"main","index":0}],[{"node":"Set error","type":"main","index":0}]]},"Process text message":{"main":[[{"node":"Send response","type":"main","index":0}],[{"node":"Set error","type":"main","index":0}]]},"Process Item Image":{"main":[[{"node":"Send response","type":"main","index":0}],[{"node":"Set error","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"Process Item Image","type":"ai_languageModel","index":0}]]},"Is packing list":{"main":[[{"node":"Extract items","type":"main","index":0}],[{"node":"Upload file","type":"main","index":0}]]},"Postgres Chat Memory1":{"ai_memory":[[{"node":"Process Item Image","type":"ai_memory","index":0}]]},"Postgres Chat Memory2":{"ai_memory":[[{"node":"Process text message","type":"ai_memory","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Process text message","type":"ai_languageModel","index":0}]]},"Postgres Chat Memory3":{"ai_memory":[[{"node":"Store items from packing list","type":"ai_memory","index":0}]]},"Telegram trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Has image":{"main":[[{"node":"Download image","type":"main","index":0}],[{"node":"Process text message","type":"main","index":0}]]},"Download image":{"main":[[{"node":"convert MIME type","type":"main","index":0}]]},"convert MIME type":{"main":[[{"node":"Is packing list","type":"main","index":0}]]},"Upload file":{"main":[[{"node":"Extract barcode info","type":"main","index":0}]]},"Extract barcode info":{"main":[[{"node":"Set item info","type":"main","index":0}]]},"Set item info":{"main":[[{"node":"Process Item Image","type":"main","index":0}]]},"Add or modify item":{"ai_tool":[[{"node":"Process Item Image","type":"ai_tool","index":0}]]},"Add item":{"ai_tool":[[{"node":"Store items from packing list","type":"ai_tool","index":0}]]},"MCP Client":{"ai_tool":[[{"node":"Process text message","type":"ai_tool","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Update state":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Has image","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"Load current state":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"81270a3a-5518-49d3-9e6a-dd77b1aaf22e","triggerCount":1,"tags":[{"createdAt":"2025-06-30T11:35:53.792Z","updatedAt":"2025-06-30T11:35:53.792Z","id":"wWEKn0VtZYLErCuU","name":"ashish"}]}