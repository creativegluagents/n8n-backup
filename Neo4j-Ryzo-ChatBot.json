{"createdAt":"2025-08-14T08:31:43.762Z","updatedAt":"2025-08-14T12:54:06.782Z","id":"PEEyBe4pvU4lrpbY","name":"Neo4j-Ryzo-ChatBot","active":true,"isArchived":false,"nodes":[{"parameters":{"public":true,"mode":"webhook","authentication":"basicAuth","options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[352,656],"id":"72464d56-81c9-42af-b64b-d2dfcde92a23","name":"When chat message received","webhookId":"16ee3945-e238-4682-98e5-93d077c62686","credentials":{"httpBasicAuth":{"id":"hKDxxWrMQS7pJhUg","name":"creative-glu"}}},{"parameters":{"content":"## Trigger\n","height":244,"width":288,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[272,592],"id":"b7132080-6a8d-41d2-b52b-a0e5b88d6a89","name":"Sticky Note"},{"parameters":{"resource":"graphDb","indexName":"","cypherQuery":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Cypher_Query', `Get a cypher query from Ai agent`, 'string') }}"},"type":"n8n-nodes-neo4j.neo4jTool","typeVersion":1,"position":[1040,928],"id":"ac0c9f98-9028-4999-a93b-53bbf004ea8d","name":"ExecuteQuery graphDb in Neo4j","credentials":{"neo4jApi":{"id":"jjFI6EsICCpC2S6A","name":"Neo4j account 2"}}},{"parameters":{"model":{"__rl":true,"value":"gpt-5","mode":"list","cachedResultName":"gpt-5"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[416,928],"id":"2d889541-af48-4eee-a84c-783b5b1743f5","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"resource":"graphDb","operation":"getSchema","indexName":"node","schemaAsString":true},"type":"n8n-nodes-neo4j.neo4j","typeVersion":1,"position":[688,656],"id":"aad0da46-c7b2-4324-b9b9-b961083c8e19","name":"GetSchema graphDb","credentials":{"neo4jApi":{"id":"jjFI6EsICCpC2S6A","name":"Neo4j account 2"}}},{"parameters":{"content":"## Neo4j Schema Identifier\n","height":244,"width":288,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[576,592],"id":"ccae7b12-d78f-483f-93b2-86abfe5833d3","name":"Sticky Note1"},{"parameters":{"content":"## Neo4j Schema Identifier\n","height":244,"width":464,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[880,592],"id":"a3af0a80-5063-4b3e-9361-7038a8335c7a","name":"Sticky Note2"},{"parameters":{"promptType":"define","text":"={{ $('When chat message received').item.json.query }}","options":{"systemMessage":"=# Enhanced AI Cypher Query Generator Agent for Neo4j\n\nYou are Ryzosphere AI Assistant, a specialized Cypher Query Generator Agent for Neo4j. Your job is to understand user intent and generate correct Cypher queries based on the provided schema, while maintaining a conversational and helpful persona.\n\n## GREETING & INTRODUCTION\nWhen users greet you with \"Hi\", \"Hello\", \"What can you do?\", \"What is Ryzosphere?\", or similar introductory messages, respond with:\n\n**\"Hello! I'm Ryzosphere AI Assistant — here to help you get the answers you need. What can I help you with today?\"**\n\n## CORE BEHAVIOR RULES\n\n### 1. Database Query Generation\n- Read user messages carefully and understand their intent\n- Generate correct Cypher queries **strictly based on the provided schema**\n- **Think twice** before generating any query - analyze the user's request thoroughly\n- Execute queries automatically using the connected Neo4j DB tool\n\n### 2. Schema Compliance (CRITICAL)\n- **ONLY** use nodes, relationships, and properties defined in the schema\n- **NEVER** use `id` as a property in queries\n- **ALWAYS** use `NodeID` when matching or filtering by unique identifiers\n- ❌ Wrong: `{id: \"Barbers Farms Org\"}`\n- ✅ Correct: `{NodeID: \"Barbers Farms Org\"}`\n\n### 3. User Experience\n- **DO NOT** share the Cypher query in your response\n- Behave like a conversational chatbot expert\n- **ONLY** return the data/results the user requested\n- Keep responses clean and user-friendly\n- If there's any confusion about the user's request, ask for clarification\n\n### 4. Error Handling\n- If the user's request is unclear or ambiguous, politely ask them to clarify\n- If the requested data doesn't exist in the schema, inform the user appropriately\n- Always maintain a helpful and professional tone\n\n## DATABASE SCHEMA\n{{ $json.schema }}\n\n## RESPONSE FORMAT\n- Provide direct, concise answers based on query results\n- No technical jargon unless specifically requested\n- Focus on delivering the information the user needs\n- If no results found, inform the user clearly\n\n## EXAMPLE INTERACTION\n**User:** \"What is the sub-type of Barbers Farms Org?\"\n\n**Your Process (Internal):**\n1. Understand intent: User wants sub-type information\n2. Generate query: `MATCH (o:Organizations {NodeID: \"Barbers Farms Org\"})-[:HAS_SUBTYPE]->(st:Organization_Sub_Type) RETURN st.NodeID AS SubType`\n3. Execute query automatically\n4. Return only the result\n\n**Your Response:** \"The sub-type of Barbers Farms Org is: [Result from query]\"\n\n## IMPORTANT REMINDERS\n- Always think carefully before generating queries\n- Never expose technical details unless asked\n- Maintain conversational flow\n- Ask for clarification when needed\n- Focus on user satisfaction and accurate results\n- use think node when you have any confusion\n\nNow, wait for user input and assist them accordingly."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[976,656],"id":"e137f0b1-c566-4f7f-8a3a-5e5a2da4f67e","name":"AI Agent Cypher Query"},{"parameters":{"content":"## Brain and Neo4j-DB \n","height":244,"width":1072,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[272,848],"id":"7aafb2e4-fbde-4c89-8f21-856328633e62","name":"Sticky Note3"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.toolThink","typeVersion":1.1,"position":[704,928],"id":"8d040b48-060d-4d3c-ba12-aa46269ff2ae","name":"Think"},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $now.format('yyyy-MM-dd') }}"},"type":"@n8n/n8n-nodes-langchain.memoryZep","typeVersion":1.3,"position":[848,928],"id":"596588a5-b55f-4db6-a53f-2e1c8786fd55","name":"Memory","credentials":{"zepApi":{"id":"tbfKFBmUNZ58YiMW","name":"Zep Api account"}}}],"connections":{"When chat message received":{"main":[[{"node":"GetSchema graphDb","type":"main","index":0}]]},"ExecuteQuery graphDb in Neo4j":{"ai_tool":[[{"node":"AI Agent Cypher Query","type":"ai_tool","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent Cypher Query","type":"ai_languageModel","index":0}]]},"GetSchema graphDb":{"main":[[{"node":"AI Agent Cypher Query","type":"main","index":0}]]},"AI Agent Cypher Query":{"main":[[]]},"Think":{"ai_tool":[[{"node":"AI Agent Cypher Query","type":"ai_tool","index":0}]]},"Memory":{"ai_memory":[[{"node":"AI Agent Cypher Query","type":"ai_memory","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c9c76d0c-49c8-4a8a-a89b-0659c906b128","triggerCount":1,"tags":[]}