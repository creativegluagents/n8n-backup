{"createdAt":"2025-06-16T11:00:12.923Z","updatedAt":"2025-06-16T11:58:44.071Z","id":"n6FqMur7u6dLMjMB","name":"Faceless video","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"https://api.piapi.ai/api/v1/task","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n    \"model\": \"Qubico/flux1-dev\",\n    \"task_type\": \"txt2img\",\n    \"input\": {\n        \"prompt\": \"{{ $json.output.replace(/\"/g, '') }}\",\n        \"width\": 540, \n        \"height\": 960\n    } \n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[820,100],"id":"2d9dc083-86e8-4198-bf73-689b144d7585","name":"Generate Image","credentials":{"httpHeaderAuth":{"id":"0npi5HVx8iITBpoK","name":"PI API Token"},"httpBearerAuth":{"id":"U9tfqTc7TMGNzGRQ","name":"OpenAI API "}}},{"parameters":{"url":"=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1180,100],"id":"cd5ac29f-84bf-40f5-a7cf-fba39a2efe75","name":"Get Images","credentials":{"httpHeaderAuth":{"id":"0npi5HVx8iITBpoK","name":"PI API Token"}}},{"parameters":{"promptType":"define","text":"=Scene: {{ $('Get Images').item.json.data.input.prompt }}","options":{"systemMessage":"=# Overview\nYou are a Master Sound Prompt Generator.\nYour task is to create vivid, immersive sound prompts based on a given scene. These prompts will be used to generate background audio that matches the mood and environment of the scene.\n\n## Instructions\n- Generate a one- to two-sentence prompt that captures the ambiance, tone, and key sound elements.\n- Use rich, evocative language to describe the background atmosphere, highlighting specific sounds (e.g., footsteps on cobblestone, distant chatter, wind rustling leaves, faint music, industrial hum).\n- Focus on the background audio â€” not dialogue, narration, or foreground sound effects.\n- Match the emotion and setting of the scene, whether it's calm, chaotic, eerie, festive, or serene.\n- Avoid vague descriptions; be specific and sensory-driven to maximize immersion.\n- Never include quotation marks (\"\") or newlines (\\n) in the output.\n\n## Output\nReturn only the crafted sound prompt text, ready to be used for an audio generation model.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[1440,100],"id":"599292f5-8ca4-46dd-b29e-e14280f5f31a","name":"Sound Agent"},{"parameters":{"method":"POST","url":"https://api.elevenlabs.io/v1/sound-generation","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"={{ $json.output.replace(/\"/g, '') }}"},{"name":"duration_seconds","value":"5"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1800,100],"id":"5f6eed49-509b-4979-8f05-9c7bae32321f","name":"Generate Audio","credentials":{"httpHeaderAuth":{"id":"RkFl15bptlgHHRZv","name":"Elevan Labs Token"}}},{"parameters":{"name":"={{ $('Get Videos').item.json.id }}.mp3","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"1hhZhHBv0zm3adye9LE_sxwme7z7yUXw5","mode":"list","cachedResultName":"Audio Files","cachedResultUrl":"https://drive.google.com/drive/folders/1hhZhHBv0zm3adye9LE_sxwme7z7yUXw5"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[1980,100],"id":"1aaa7c09-7b6d-4090-a3c3-8108f7b163d7","name":"Upload to Drive","credentials":{"googleDriveOAuth2Api":{"id":"tpwDboahmvtrDGYm","name":"Google Drive account 2"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":3,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[1460,440],"id":"e2241c91-bb2c-4e5a-9b99-65e8e7ca2895","name":"Merge"},{"parameters":{"method":"POST","url":"https://api.creatomate.com/v1/renders","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Bearer "}]},"sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"template_id\": \"e19f26a1-dfb6-4a0d-a3ba-d394e398b3c9\",\n  \"modifications\": {\n    \"Video-1.source\": \"{{ $json.urls[0].url }}\",\n    \"Video-2.source\": \"{{ $json.urls[1].url }}\",\n    \"Video-3.source\": \"{{ $json.urls[2].url }}\",\n    \"Video-4.source\": \"{{ $json.urls[3].url }}\",\n    \"Audio-1.source\": \"{{ $json.urls[0].webContentLink }}\",\n    \"Audio-2.source\": \"{{ $json.urls[1].webContentLink }}\",\n    \"Audio-3.source\": \"{{ $json.urls[2].webContentLink }}\",\n    \"Audio-4.source\": \"{{ $json.urls[3].webContentLink }}\"\n  }\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1860,440],"id":"f51ef409-44ed-47b6-b7f2-56a70fae9a67","name":"Render Video"},{"parameters":{"amount":25},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2060,440],"id":"d2da6f47-c244-4917-98b5-0c158d1ee63f","name":"25 Seconds","webhookId":"d5cd29e8-d3f7-491c-a6b6-2d705aa47931"},{"parameters":{"url":"={{ $json.url }}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1460,660],"id":"b7825bfe-4cb9-4079-9ceb-3308bb7d2b7a","name":"Download Video"},{"parameters":{"content":"# Generate Image Prompts","height":540,"width":740,"color":4},"type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1,"id":"63291468-f219-49a5-b5dd-e23cb70262fc","name":"Sticky Note3","disabled":true},{"parameters":{"content":"# Generate Images\n","height":260,"width":600,"color":5},"type":"n8n-nodes-base.stickyNote","position":[760,0],"typeVersion":1,"id":"1e051715-aca9-46f6-9309-234aa19977f4","name":"Sticky Note4"},{"parameters":{"content":"# Generate Audio\n\n","height":320,"width":980,"color":3},"type":"n8n-nodes-base.stickyNote","position":[1380,0],"typeVersion":1,"id":"d3170756-0623-4f6d-af61-547c9cf282ae","name":"Sticky Note"},{"parameters":{"content":"# Render & Log\n","height":500,"width":1040},"type":"n8n-nodes-base.stickyNote","position":[1380,340],"typeVersion":1,"id":"71701ad1-00c9-4ab7-99ad-9a036f19636c","name":"Sticky Note2"},{"parameters":{"url":"=https://api.dev.runwayml.com/v1/tasks/{{ $json.id }}","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"X-Runway-Version","value":"2024-11-06"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1180,380],"id":"6f466996-b33e-4fe7-8864-a25b9f93f32e","name":"Get Videos","credentials":{"httpHeaderAuth":{"id":"KvnGy4FbRxGyngct","name":"Header Auth account 2"},"httpBearerAuth":{"id":"sYW77Q8jeiHhzVsy","name":"Runway Token"}}},{"parameters":{"method":"POST","url":"https://api.dev.runwayml.com/v1/image_to_video","authentication":"genericCredentialType","genericAuthType":"httpBearerAuth","sendHeaders":true,"headerParameters":{"parameters":[{"name":"X-Runway-Version","value":"2024-11-06"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"promptImage","value":"={{ $json.data.output.image_url }}"},{"name":"model","value":"gen3a_turbo"},{"name":"ratio","value":"768:1280"},{"name":"duration","value":"5"},{"name":"promptText","value":"={{ $json.data.input.prompt.replace(/\"/g, '') }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[840,380],"id":"d11e312d-b474-47ec-a1ca-75e082c6428c","name":"Generate Videos","credentials":{"httpHeaderAuth":{"id":"KvnGy4FbRxGyngct","name":"Header Auth account 2"},"httpBearerAuth":{"id":"sYW77Q8jeiHhzVsy","name":"Runway Token"}}},{"parameters":{"content":"# Generate Videos\n","height":260,"width":600,"color":5},"type":"n8n-nodes-base.stickyNote","position":[760,280],"typeVersion":1,"id":"b26e9194-627a-4e21-b2f0-26f9ec9ba389","name":"Sticky Note5"},{"parameters":{"jsCode":"// N8n Code Node to extract URLs from output arrays and combine them into a single array\n// This code assumes your input JSON is in items[0].json or is multiple items\n// Determine data source format\nlet inputArray;\nif (items.length === 1 && Array.isArray(items[0].json)) {\n  // If we have a single item containing our array\n  inputArray = items[0].json;\n} else if (items.length > 1) {\n  // If we already have multiple items, each containing part of our data\n  inputArray = items.map(item => item.json || item);\n} else {\n  throw new Error('Input structure not recognized. Please check your data format.');\n}\n// Create a single array to hold all URLs\nconst urlArray = [];\n// Process each item in the input array\nfor (const item of inputArray) {\n  // Get the data object\n  const data = item;\n  \n  // Check if the item has an output array\n  if (data.output && Array.isArray(data.output)) {\n    // For each URL in the output array, add to our URL array\n    for (const url of data.output) {\n      // Add URL along with metadata including the web content link\n      urlArray.push({\n        url: url,\n        sourceId: data.id,\n        createdAt: data.createdAt,\n        webContentLink: data.webContentLink || null // Add the web content link\n      });\n    }\n  }\n}\n// Return a single item containing the array of all URLs\nreturn [{\n  json: {\n    urls: urlArray\n  }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1660,440],"id":"58f44301-1c66-4330-90d4-a5f9ef125533","name":"Split Out Parts"},{"parameters":{"operation":"share","fileId":{"__rl":true,"value":"={{ $json.id }}","mode":"id"},"permissionsUi":{"permissionsValues":{"role":"reader","type":"anyone","allowFileDiscovery":true}},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[2180,100],"id":"d1221ac2-2f2b-4c70-90d2-deaad3955bee","name":"Share File","credentials":{"googleDriveOAuth2Api":{"id":"tpwDboahmvtrDGYm","name":"Google Drive account 2"}}},{"parameters":{"workflowInputs":{"values":[{"name":"videoTopic"},{"name":"chatID"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[60,160],"id":"57f5f357-8bf8-4652-855b-033919db3f7f","name":"When Executed by Another Workflow"},{"parameters":{"model":"openai/gpt-4.1-mini","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[240,620],"id":"914cc4fe-371f-43ab-b538-cc2464e22ad5","name":"GPT 4.1 mini","credentials":{"openRouterApi":{"id":"HpEjQpM176fwztFV","name":"OpenRouter account 2"}}},{"parameters":{"jsonSchemaExample":"{\n  \"Part 1\": \"Prompt for part 1\",\n  \"Part 2\": \"Prompt for part 2\",\n  \"Part 3\": \"Prompt for part 3\",\n  \"Part 4\": \"Prompt for part 4\"\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[440,340],"id":"48614ad9-9b96-432f-9b06-17dca2bbc88e","name":"4 Parts"},{"parameters":{"promptType":"define","text":"=Video Topic: {{ $json.videoTopic }}","hasOutputParser":true,"options":{"systemMessage":"=# Overview\nYou are a Master Visual Story Structuring Agent.\nYour task is to take a given short video topic and split it into four parts that together form a cohesive, vivid story, optimized for text-to-image generation.\n\n## Instructions:\n- You must create exactly four parts: Part 1, Part 2, Part 3, and Part 4.\n- Describe the subject of the story in the EXACT same way in all four parts. Each part should be consistent.\n- Each part should build upon the previous, creating a complete visual story by the end.\n- Every part must be written as a high-quality, richly detailed image prompt, following professional standards for models like Flux or similar.\n- Describe characters, settings, outfits, actions, and background elements vividly and precisely.\n- Use rich, imaginative language to maximize visual fidelity.\n- Avoid generic terms â€” always opt for specific and colorful descriptions.\n- No quotation marks (\"\") or newlines (\\n) should be included in the output.\n- Keep the description natural and seamless so it can be fed directly into a text-to-image model.\n\n## Key Elements to Include in Each Part:\n- Clear description of main subjects (appearance, outfits, facial expressions, poses)\n- Accessories or objects that add to the scene\n- A vivid background that matches the theme and enhances the overall story\n- Consistency and natural progression from part to part\n\n## Output Format:\nReturn your response structured into four fields:\n- Part 1: [Vivid image prompt for Part 1]\n- Part 2: [Vivid image prompt for Part 2]\n- Part 3: [Vivid image prompt for Part 3]\n- Part 4: [Vivid image prompt for Part 4]\n\nOnly output the fields listed above.\nMake sure the story across all four parts feels cohesive, visually rich, and cinematic."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[240,160],"id":"949342cc-5513-40ca-85af-f6534b51f277","name":"Image Prompt Agent"},{"parameters":{"fieldToSplitOut":"output","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[560,160],"id":"51f5ce2f-e171-4c0b-90d0-00c6b5076434","name":"Split Out"},{"parameters":{"operation":"sendVideo","chatId":"={{ $('When Executed by Another Workflow').first().json.chatID }}","binaryData":true,"additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[1640,660],"id":"81fbab51-cb3d-4faa-81a0-35ebc3df4d74","name":"Send Video","webhookId":"cdeb2987-d275-480b-8532-f69bbed64999","credentials":{"telegramApi":{"id":"9UDTcxGhNUDvWhgx","name":"typing test bot"}}},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"GPT-4.1-MINI"},"messages":{"values":[{"content":"=Video: {{ $('When Executed by Another Workflow').first().json.videoTopic }}"},{"content":"Create a 3-4 word title for the given video","role":"system"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[1840,660],"id":"1706964d-477b-45c3-813b-bc8658be673c","name":"Title","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"operation":"append","documentId":{"__rl":true,"value":"1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0","mode":"list","cachedResultName":"Marketing Team Log","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Title":"={{ $json.message.content }}","Request":"={{ $('When Executed by Another Workflow').first().json.videoTopic }}","Link":"={{ $('Download Video').item.json.url }}","Type":"Video"},"matchingColumns":[],"schema":[{"id":"Title","displayName":"Title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Type","displayName":"Type","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Request","displayName":"Request","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"ID","displayName":"ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Link","displayName":"Link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Post","displayName":"Post","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2200,660],"id":"1d926b09-d5d5-46a4-8861-48b53f6aed88","name":"Log Video","credentials":{"googleSheetsOAuth2Api":{"id":"0e2MdtnLl9hGCdxD","name":"Google Sheets account 2"}}},{"parameters":{"amount":90},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1000,100],"id":"bef04a7f-90a8-435a-8b8d-e68d47d1023c","name":"90 Seconds","webhookId":"ffdc5132-c0fe-44f6-af2b-4b3bb8894153"},{"parameters":{"amount":90},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1000,380],"id":"2679cdbe-5cab-417f-9e84-ab7c99c237aa","name":"90_Seconds","webhookId":"3ce99001-8f5a-4c0a-9b25-e3e261fcc778"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[260,380],"id":"b0874e59-ba71-4888-afdc-eb10b081a244","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1480,320],"id":"8ed6e924-c841-42b7-b527-12e369ef8c89","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}}],"connections":{"Generate Image":{"main":[[{"node":"90 Seconds","type":"main","index":0}]]},"Get Images":{"main":[[{"node":"Generate Videos","type":"main","index":0}]]},"Sound Agent":{"main":[[{"node":"Generate Audio","type":"main","index":0}]]},"Generate Audio":{"main":[[{"node":"Upload to Drive","type":"main","index":0}]]},"Upload to Drive":{"main":[[{"node":"Share File","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Split Out Parts","type":"main","index":0}]]},"Render Video":{"main":[[{"node":"25 Seconds","type":"main","index":0}]]},"25 Seconds":{"main":[[{"node":"Download Video","type":"main","index":0}]]},"Download Video":{"main":[[{"node":"Send Video","type":"main","index":0}]]},"Get Videos":{"main":[[{"node":"Merge","type":"main","index":0},{"node":"Sound Agent","type":"main","index":0}]]},"Generate Videos":{"main":[[{"node":"90_Seconds","type":"main","index":0}]]},"Split Out Parts":{"main":[[{"node":"Render Video","type":"main","index":0}]]},"Share File":{"main":[[{"node":"Merge","type":"main","index":2}]]},"When Executed by Another Workflow":{"main":[[{"node":"Image Prompt Agent","type":"main","index":0}]]},"GPT 4.1 mini":{"ai_languageModel":[[]]},"4 Parts":{"ai_outputParser":[[{"node":"Image Prompt Agent","type":"ai_outputParser","index":0}]]},"Image Prompt Agent":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Generate Image","type":"main","index":0}]]},"Send Video":{"main":[[{"node":"Title","type":"main","index":0}]]},"Title":{"main":[[{"node":"Log Video","type":"main","index":0}]]},"90 Seconds":{"main":[[{"node":"Get Images","type":"main","index":0}]]},"90_Seconds":{"main":[[{"node":"Get Videos","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Image Prompt Agent","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Sound Agent","type":"ai_languageModel","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"videoTopic":"A beaver building a house, showing the beaver gathering sticks, arranging them by a riverbank, creating a dam and then constructing a cozy lodge inside.","chatID":8056822155}}]},"versionId":"4525c794-8694-45c0-9949-5370a06a1190","triggerCount":0,"tags":[]}