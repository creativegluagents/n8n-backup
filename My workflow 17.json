{"createdAt":"2025-06-04T04:53:49.288Z","updatedAt":"2025-06-04T07:27:14.363Z","id":"STLQDM2OQmOVDrcR","name":"My workflow 17","active":false,"isArchived":false,"nodes":[{"parameters":{"sessionIdType":"customKey","sessionKey":"session"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[320,260],"id":"d6876e5d-5e52-4613-98bb-9aa570202db2","name":"Simple Memory"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[200,260],"id":"47ab94b8-fe6d-4403-938d-17d1d67290f2","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"L5UoHZfkBt6nb3Ad","name":"OpenAi Account"}}},{"parameters":{"description":"Call this tool when user provide token to store for validate them , Always call that  tool first before to to call any tool ","workflowId":{"__rl":true,"value":"iH5RMdJxQ4WXzYzJ","mode":"list","cachedResultName":"store-user-token"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user-provided-token":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('user-provided-token', `extract user provided token from user message only token not other words and keys just plain token`, 'string') }}","Secret-token":"={{ $('Get Secret Token').item.json.Token }}","userId":"={{ $('Telegram Trigger').item.json.message.from.id }}"},"matchingColumns":[],"schema":[{"id":"user-provided-token","displayName":"user-provided-token","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true},{"id":"Secret-token","displayName":"Secret-token","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true},{"id":"userId","displayName":"userId","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[440,260],"id":"8b21e84e-e9e9-47dd-96b0-e93b19d9be31","name":"validate and store user provided token"},{"parameters":{"documentId":{"__rl":true,"value":"1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU","mode":"list","cachedResultName":"Hanna_Auth","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Secret_token","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-680,40],"id":"733ac234-30f8-47bb-a9b6-8267bf37668c","name":"Get Secret Token","alwaysOutputData":true,"credentials":{"googleSheetsOAuth2Api":{"id":"2a7t9bbSmio220XT","name":"Dan Google Cred"}}},{"parameters":{"documentId":{"__rl":true,"value":"1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU","mode":"list","cachedResultName":"Hanna_Auth","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":2048845196,"mode":"list","cachedResultName":"users_tokens","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1uk-rDY0a3RMxHCtWtJyRqE09xXfiV7itOgSF2LmoCSU/edit#gid=2048845196"},"filtersUI":{"values":[{"lookupColumn":"userId","lookupValue":"={{ $('Telegram Trigger').item.json.message.chat.id }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-460,40],"id":"7034c4e5-f550-4cd3-9446-591ee47f4635","name":"Get User Stored Token","alwaysOutputData":true,"credentials":{"googleSheetsOAuth2Api":{"id":"2a7t9bbSmio220XT","name":"Dan Google Cred"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72deedc8-124f-4174-86db-6e0745ac62e7","leftValue":"={{ $('Get Secret Token').item.json.Token }}","rightValue":"={{ $('Get User Stored Token').item.json.Token }}","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}},{"id":"5bf0ae3e-51f2-4bab-88de-af82c0e3dc7f","leftValue":"={{ $json.isValid }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-40,40],"id":"16fb0529-d7c0-4933-a912-84feee22af0d","name":"Validate Secret Token And User Token"},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.2,"position":[-900,40],"id":"f8ef655f-430c-4b77-98c2-92c8a12097f7","name":"Telegram Trigger","webhookId":"728712d5-883f-454f-ab3d-096655b92a5f","credentials":{"telegramApi":{"id":"oevEQM4lThrw7l8X","name":"hannaTokenTest_Bot"}},"disabled":true},{"parameters":{"promptType":"define","text":"={{ $('Telegram Trigger').item.json.message.text }}","options":{"systemMessage":"You are a helpful AI assistant. Your role is to validate the user's access token before they can use the secure functionality of this portal.\n\nYour behaviour must follow these rules:\n\n1. Ask the user to provide a **valid access token**.\n2. The token must be submitted as a **plain message** – without any additional text, formatting, or words.\n   - ✅ Correct: `abc123xyz`\n   - ❌ Incorrect: \"My token is abc123xyz\" or \"Token: abc123xyz\"\n\n3. If no token is stored or the user did not provide one:\n   - Respond with this exact message:\n     > ❌ You are not a valid user to access the Hanna Bot.  \n     > Please provide a valid token in plain text to continue.\n\n4. Wait for the user to provide a token.\n5. Once a plain-text token is received:\n   - Call the **validate and store user provided token**  tool to validate or process the token. And share the output which you got from Tool only \n\nYour task is only to validate the token and guide the user through this process securely. Do not perform any other actions or give access until the token is validated."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.9,"position":[232,40],"id":"90b1b910-452d-41fc-aba2-8a59f5164b2f","name":"Validate And Set Token"},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.from.id }}","text":"={{ $json.output }}","replyMarkup":"forceReply","forceReply":{"force_reply":false},"additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[640,40],"id":"cab1b61c-52d7-4418-9bcd-12d54465330b","name":"Respond","webhookId":"1693354b-be45-40ff-bc22-dfdbba017f67","credentials":{"telegramApi":{"id":"oevEQM4lThrw7l8X","name":"hannaTokenTest_Bot"}}},{"parameters":{"jsCode":"return [\n  {\n    json: {\n      userId: $json.userId,\n      token: $json.Token,\n      expiredAt: $json.expiredAt,\n      isValid: new Date() < new Date($json.expiredAt)\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-240,40],"id":"edf04a66-dd05-4f6a-89b5-c28bfc5704e2","name":"Code"}],"connections":{"Simple Memory":{"ai_memory":[[{"node":"Validate And Set Token","type":"ai_memory","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Validate And Set Token","type":"ai_languageModel","index":0}]]},"validate and store user provided token":{"ai_tool":[[{"node":"Validate And Set Token","type":"ai_tool","index":0}]]},"Get Secret Token":{"main":[[{"node":"Get User Stored Token","type":"main","index":0}]]},"Get User Stored Token":{"main":[[{"node":"Code","type":"main","index":0}]]},"Validate Secret Token And User Token":{"main":[[],[{"node":"Validate And Set Token","type":"main","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Get Secret Token","type":"main","index":0}]]},"Validate And Set Token":{"main":[[{"node":"Respond","type":"main","index":0}]]},"Code":{"main":[[{"node":"Validate Secret Token And User Token","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"54357d4d-d3a0-477e-8234-4028ec761f89","triggerCount":1,"tags":[]}