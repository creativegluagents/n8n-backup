{"createdAt":"2025-07-30T13:34:29.503Z","updatedAt":"2025-08-13T12:34:30.293Z","id":"E6CfMaZ66qZvypvI","name":"2. Sample adequacy checker","active":true,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"text"},{"name":"domains","type":"any"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-1840,-272],"id":"cd7e7f54-a55f-4788-a73a-1a3633b6a8d1","name":"When Executed by Another Workflow"},{"parameters":{"promptType":"define","text":"={{ $json.text }}","options":{"systemMessage":"=You are an environmental compliance assistant.\n\nYour task:\nGiven the text of a waste classification report, extract only those stockpiles, domains, or waste areas that have actual samples collected and reported (i.e., those that are treated as a distinct entity for EPA compliance).\n\nInstructions:\n\nFor each sampling domain/stockpile/area:\n\nExtract the domain name/label (e.g., “Stockpile 7 (SP-7)”).\n\nExtract its volume in cubic meters (m³) as a number.\n\nExtract the number of samples collected as a number.\n\nOnly include a domain if samples were actually taken for it, or it is clearly treated as a distinct sampling entity for EPA reporting.\n\nIgnore any “sections” or “sub-areas” that are just parts of a larger merged stockpile, unless the report explicitly provides separate sample data for them.\n\nIf the report describes multiple areas merged into one for sampling (e.g., “all areas formed into 1 stockpile after sampling”), treat this as a single domain and report the combined data.\n\nIf any value is missing, use null.\n\nOutput Format:\nReturn an array of objects, where each object is:\n\n{ \"name\": \"Stockpile 7 (SP-7)\", \"volume\": 200, \"samples_taken\": 9 }\nOnly output the array. No commentary, summary, or extra text."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-1392,512],"id":"4691dcc0-3dc2-4e11-a1ae-3e3a96f8b942","name":"AI Agent3"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-1328,736],"id":"e480cbd1-890a-4899-bb80-76c1267b26f0","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"// Get the output string from AI agent\nconst outputStr = $input.first().json.output;\n\n// Remove markdown code block if present\nconst cleanedStr = outputStr\n  .replace(/```(?:json)?\\s*/gi, '') // Remove ```json or ``` (case-insensitive)\n  .replace(/```/g, '')              // Remove closing ```\n  .trim();\n\n// Parse the cleaned JSON string\nconst domains = JSON.parse(cleanedStr);\n\n// Now you can process each domain as an object!\nreturn domains;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-816,608],"id":"897e1943-8ae9-4fc3-8e81-08c51935da19","name":"Code3"},{"parameters":{"jsCode":"function getRequiredSamples(volume) {\n  if (volume < 75) return 3;\n  if (volume < 100) return 4;\n  if (volume < 125) return 5;\n  if (volume < 150) return 6;\n  if (volume < 175) return 7;\n  if (volume < 200) return 8;\n  // For volumes >= 200, use strict 1 per 25 m³ rule for regulatory defensibility\n  return Math.ceil(volume / 25);\n}\n\n// This assumes your input array is stored as the first item's \"output\" field, as a stringified JSON array\nconst domainArray = typeof $('AI Agent3').first().json.output === 'string' ? JSON.parse($('AI Agent3').first().json.output) : $('AI Agent3').first().json.output;\n\nconst results = domainArray.map(domain => {\n  const volume = Number(domain.volume);\n  const samples = Number(domain.samples_taken);\n  const required = getRequiredSamples(volume);\n\n  return {\n    name: domain.name,\n    volume: volume,\n    samples_taken: samples,\n    required_samples: required,\n    status: samples >= required ? \"OK\" : \"DEFICIENT\",\n    shortfall: samples >= required ? 0 : required - samples\n  };\n});\n\nreturn results.map(r => ({ json: r }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-592,608],"id":"133c1511-ee11-4014-869e-bb12c5e80871","name":"Code4"},{"parameters":{"promptType":"define","text":"=deficient_domains::{{ $json.deficient_domains.toJsonString() }}\n\nNon_deficient_domains::{{ $json.ok_domains.toJsonString() }}","options":{"systemMessage":"=You are given two lists: deficient_domains and ok_domains.\n\nGenerate a ready-to-send message with no extra commentary or explanations. Follow these rules:\n\nStart with a greeting: \"Hi,\"\n\nList all domains found (both deficient and non-deficient) in one combined list. For each domain, display:\n\nDomain name\n\nSamples taken\n\nSamples required\n\nIf deficient_domains is empty: State that all domains have sufficient samples.\n\nIf deficient_domains has items: After the full list, clearly identify the deficient domains in a separate section with the shortfall amount.\n\nIf deficiencies exist: Add a polite request to address them.\n\nAlways end with: \"Thank you!\"\n\nDo not add any intro text, explanations, or formatting outside the message itself.\n\nExample when there are deficiencies:\nHi,  \nThe following domains were found during our review:  \n\n- Domain A — Samples taken: 3 / Required: 4  \n- Domain B — Samples taken: 5 / Required: 5  \n- Domain C — Samples taken: 2 / Required: 3  \n\nAmong these, the following domains currently have sample deficits:  \n\n- Domain A: 1 sample short  \n- Domain C: 1 sample short  \n\nPlease address these deficiencies as soon as possible. Thank you!\n\nExample when there are no deficiencies:\nHi,  \nThe following domains were found during our review:  \n\n- Domain A — Samples taken: 4 / Required: 4  \n- Domain B — Samples taken: 3 / Required: 3  \n- Domain C — Samples taken: 2 / Required: 2  \n\nAll domains have sufficient samples. Thank you!"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-144,608],"id":"3fb47520-7fd0-4bb9-b308-ff50d4eba569","name":"AI Agent4","executeOnce":false},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-80,832],"id":"98d7dd2a-45f3-48ed-b6f2-ce159deabd01","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"const stockpiles = $input.all().map(item => item.json);\n\nconst deficientStockpiles = stockpiles.filter(stockpile => stockpile.status === \"DEFICIENT\");\nconst okStockpiles = stockpiles.filter(stockpile => stockpile.status === \"OK\");\nconst completed = deficientStockpiles.length === 0;\n\nreturn [{\n    json: {\n        deficient_domains: deficientStockpiles,\n        ok_domains: okStockpiles,  // Add this if you want to see the OK ones too\n        completed: completed,\n        total_stockpiles: stockpiles.length,\n        deficient_count: deficientStockpiles.length,\n        ok_count: okStockpiles.length\n    }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-368,608],"id":"81b9a991-c019-49d3-af8c-2e05d7e1d2c2","name":"Code5"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7efa078b-dd7c-44cc-8801-b77a2d93b44e","leftValue":"={{ $('Code5').item.json.completed }}","rightValue":"true","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[208,608],"id":"4ef332ff-7f53-4081-a428-c4082ebd4d67","name":"If1"},{"parameters":{"assignments":{"assignments":[{"id":"98e0098d-dc5f-4261-96d4-9263903f5d8a","name":"output","value":"={{ $('AI Agent4').item.json.output }}","type":"string"},{"id":"f91532ab-8103-493a-88ef-dc8fa9e7ac83","name":"completed","value":"false","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1008,752],"id":"5692f441-ecd6-42a5-a216-3036379812b9","name":"Edit Fields2"},{"parameters":{"assignments":{"assignments":[{"id":"2e78772a-8788-4d96-a951-89c1d370bea8","name":"output","value":"={{ $('AI Agent4').item.json.output }}","type":"string"},{"id":"2560788f-c5be-4e65-a7be-12319671e280","name":"completed","value":"true","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[496,448],"id":"252cfb34-0ee6-4173-bbe6-105eba10cd83","name":"Edit Fields3"},{"parameters":{"promptType":"define","text":"={{ $json.output }}","options":{"systemMessage":"=You are a sample deficit notification assistant.\nYou will receive a basic deficit message listing domains and their sample shortfalls.\nDraft a clear and professional email to notify about sample deficiencies.\nInstructions:\n\nBegin with a polite greeting such as \"Hello,\"\nProvide brief context that this is a routine sample inventory check\nList the domains with deficits in a clear format with specific shortfall amounts\nRequest immediate action to address the deficiencies\nSpecify a reasonable timeline for resolution (e.g., \"within the next 48 hours\")\nUse a professional, concise, and helpful tone\nClose with a polite thank you and \"Best regards\"\nDo not reference AI, automation, or personal names\n\nInput:\nYou will receive a deficit message like this:\n\"The following domains currently have a deficit in their required number of samples:\n\nStockpile 2 (SP2): 1 sample short\nStockpile 6 (SP6): 1 sample short\"\n\nYour output should be an email like this:\nHello,\nFollowing our Waste report check, we have identified deficiencies in the required number of samples for the following domains:\n\nStockpile 2 (SP2): 1 sample short\nStockpile 6 (SP6): 1 sample short\n\nPlease address these sample deficiencies within the next 48 hours to ensure compliance with our sampling requirements.\nThank you for your prompt attention to this matter.\nBest regards\nUse only the deficit information provided. Do not include names, sign-offs, or any information not specified above."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[432,752],"id":"3117b007-2448-48d9-9355-aa248826c6ac","name":"AI Agent5"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[512,976],"id":"277ddc9d-fe65-4504-af51-fceca602b168","name":"OpenAI Chat Model5","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"sendTo":"shreyansh@gammastack.com","subject":"Urgent Action Required: Domain Deficit Notification","message":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[784,752],"id":"df230fbb-0b60-4cec-9156-48dcf7353bd4","name":"Send a message1","webhookId":"fab9e627-6985-4ec3-a4e8-a8a7abc99d05","credentials":{"gmailOAuth2":{"id":"2GLRzkgXkIxgIJKL","name":"Gmail account"}}},{"parameters":{"httpMethod":"POST","path":"c08346a1-e41e-49b7-a64a-35570baf409d","responseMode":"responseNode","options":{"binaryPropertyName":"data"}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1840,512],"id":"0eae2285-ee82-49db-bb55-12a05c0a21b9","name":"Webhook","webhookId":"c08346a1-e41e-49b7-a64a-35570baf409d"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.output || \"I ran into some issues with the file you uploaded(Just for your information, file should have less than 700 pages)\" }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1232,752],"id":"3c865cd3-fe7a-400e-8ee1-0acf1e8410e1","name":"Respond to Webhook1"},{"parameters":{"respondWith":"text","responseBody":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[784,448],"id":"c9b75722-742d-4206-9aa2-79ee8d40b560","name":"Respond to Webhook3"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1e826ced-1df7-48f2-b79b-ccf88d0963b7","leftValue":"={{ $json.output }}","rightValue":"[]","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1040,512],"id":"eafea110-8e31-4ea5-a4a1-44b964f6525d","name":"If2"},{"parameters":{"respondWith":"text","responseBody":"I ran into some issues with the file you uploaded","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[-816,416],"id":"9964efbf-4483-425f-8653-a78242d4d156","name":"Respond to Webhook"},{"parameters":{"promptType":"define","text":"=report::{{ $json.text }}\ndomains::{{ $json.domains }}","options":{"systemMessage":"=You are an environmental compliance assistant.\n\nYour task:\nFor each domain in domains[], calculate sampling sufficiency and output the results in the same order and with the same names.\n\nExtract the domain name/label (e.g., “Stockpile 7 (SP-7)”).\n\nExtract its volume in cubic meters (m³) as a number.\n\nExtract the number of samples collected as a number.\n\nOnly include a domain if samples were actually taken for it, or it is clearly treated as a distinct sampling entity for EPA reporting.\n\nIgnore any “sections” or “sub-areas” that are just parts of a larger merged stockpile, unless the report explicitly provides separate sample data for them.\n\nIf the report describes multiple areas merged into one for sampling (e.g., “all areas formed into 1 stockpile after sampling”), treat this as a single domain and report the combined data.\n\nIf any value is missing, use null.\n\nOutput Format:\n(Keep exact name & order from domains[])\nReturn an array of objects, where each object is:\n\n{ \"name\": \"Stockpile 7 (SP-7)\", \"volume\": 200, \"samples_taken\": 9 }\n\nOnly output the array. No commentary, summary, or extra text."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-1616,-176],"id":"96b95f88-6f8a-4cce-b0c5-855790faff9e","name":"AI Agent6"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-1552,48],"id":"0d63f3ae-5f92-4ddc-8445-8503851b66a7","name":"OpenAI Chat Model6","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"// Get the output string from AI agent\nconst outputStr = $input.first().json.output;\n\n// Remove markdown code block if present\nconst cleanedStr = outputStr\n  .replace(/```(?:json)?\\s*/gi, '') // Remove ```json or ``` (case-insensitive)\n  .replace(/```/g, '')              // Remove closing ```\n  .trim();\n\n// Parse the cleaned JSON string\nconst domains = JSON.parse(cleanedStr);\n\n// Now you can process each domain as an object!\nreturn domains;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1040,-80],"id":"154a0d43-d4c2-488e-a85b-8e10c9a3f9dc","name":"Code6"},{"parameters":{"jsCode":"function getRequiredSamples(volume) {\n  if (volume == null || Number.isNaN(Number(volume))) return null;\n\n  // Table 3 (up to <200 m³)\n  if (volume < 75)  return 3;\n  if (volume < 100) return 4;\n  if (volume < 125) return 5;\n  if (volume < 150) return 6;\n  if (volume < 175) return 7;\n  if (volume < 200) return 8;\n\n  // Table 4 (200–300 m³ -> 12). For >300, use 1:25 but never below the 95% UCL minimum of 10.\n  if (volume <= 300) return 12;\n\n  // >300 m³\n  return Math.max(10, Math.ceil(volume / 25));\n}\n\n// This assumes your input array is stored as the first item's \"output\" field, as a stringified JSON array\nconst domainArray = typeof $('AI Agent6').first().json.output === 'string' ? JSON.parse($('AI Agent6').first().json.output) : $('AI Agent6').first().json.output;\n\nconst results = domainArray.map(domain => {\n  const volume = Number(domain.volume);\n  const samples = Number(domain.samples_taken);\n  const required = getRequiredSamples(volume);\n\n  return {\n    name: domain.name,\n    volume: volume,\n    samples_taken: samples,\n    required_samples: required,\n    status: samples >= required ? \"OK\" : \"DEFICIENT\",\n    shortfall: samples >= required ? 0 : required - samples\n  };\n});\n\nreturn results.map(r => ({ json: r }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-816,-80],"id":"1036f8f6-2b13-4106-aa20-92f3d1f116de","name":"Code7"},{"parameters":{"promptType":"define","text":"=deficient_domains::{{ $json.deficient_domains.toJsonString() }}\n\nNon_deficient_domains::{{ $json.ok_domains.toJsonString() }}","options":{"systemMessage":"=You are given two lists: deficient_domains and ok_domains.\n\nGenerate a ready-to-send message with no extra commentary or explanations. Follow these rules:\n\nStart with a greeting: \"Hi,\"\n\nList all domains found (both deficient and non-deficient) in one combined list. For each domain, display:\n\nDomain name\n\nSamples taken\n\nSamples required\n\nIf deficient_domains is empty: State that all domains have sufficient samples.\n\nIf deficient_domains has items: After the full list, clearly identify the deficient domains in a separate section with the shortfall amount.\n\nIf deficiencies exist: Add a polite request to address them.\n\nAlways end with: \"Thank you!\"\n\nDo not add any intro text, explanations, or formatting outside the message itself.\n\nExample when there are deficiencies:\nHi,  \nThe following domains were found during our review:  \n\n- Domain A — Samples taken: 3 / Required: 4  \n- Domain B — Samples taken: 5 / Required: 5  \n- Domain C — Samples taken: 2 / Required: 3  \n\nAmong these, the following domains currently have sample deficits:  \n\n- Domain A: 1 sample short  \n- Domain C: 1 sample short  \n\nPlease address these deficiencies as soon as possible. Thank you!\n\nExample when there are no deficiencies:\nHi,  \nThe following domains were found during our review:  \n\n- Domain A — Samples taken: 4 / Required: 4  \n- Domain B — Samples taken: 3 / Required: 3  \n- Domain C — Samples taken: 2 / Required: 2  \n\nAll domains have sufficient samples. Thank you!\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[-368,-80],"id":"8e7e3b81-d359-4abe-9d0b-c3568ae3120a","name":"AI Agent7","executeOnce":false},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-304,144],"id":"be4d52c9-4b33-4bd4-ac57-fdd1b464f3c5","name":"OpenAI Chat Model7","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"const stockpiles = $input.all().map(item => item.json);\n\nconst deficientStockpiles = stockpiles.filter(stockpile => stockpile.status === \"DEFICIENT\");\nconst okStockpiles = stockpiles.filter(stockpile => stockpile.status === \"OK\");\nconst completed = deficientStockpiles.length === 0;\n\nreturn [{\n    json: {\n        deficient_domains: deficientStockpiles,\n        ok_domains: okStockpiles,  // Add this if you want to see the OK ones too\n        completed: completed,\n        total_stockpiles: stockpiles.length,\n        deficient_count: deficientStockpiles.length,\n        ok_count: okStockpiles.length\n    }\n}];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-592,-80],"id":"90b8af59-ac70-4a11-8a1e-3f15ffe18264","name":"Code8"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"7efa078b-dd7c-44cc-8801-b77a2d93b44e","leftValue":"={{ $('Code8').item.json.completed }}","rightValue":"true","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-16,-80],"id":"182bb59c-1ec7-43f6-ac01-6fcd08b3a5f0","name":"If3"},{"parameters":{"assignments":{"assignments":[{"id":"98e0098d-dc5f-4261-96d4-9263903f5d8a","name":"output","value":"={{ $('Code8').item.json || \"I ran into some issues with the file you uploaded(Just for your information, file should have less than 700 pages)\" }}","type":"string"},{"id":"f91532ab-8103-493a-88ef-dc8fa9e7ac83","name":"passed","value":"false","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[784,80],"id":"f62fe31d-4a72-4a87-beb4-c1b5ea07538b","name":"Edit Fields4"},{"parameters":{"assignments":{"assignments":[{"id":"2e78772a-8788-4d96-a951-89c1d370bea8","name":"output","value":"={{ $('Code8').item.json }}","type":"string"},{"id":"2560788f-c5be-4e65-a7be-12319671e280","name":"passed","value":"true","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[272,-224],"id":"c11415fa-513f-43be-b923-28491ab1afe8","name":"Edit Fields5"},{"parameters":{"promptType":"define","text":"={{ $json.output }}","options":{"systemMessage":"=You are a sample deficit notification assistant.\nYou will receive a basic deficit message listing domains and their sample shortfalls.\nDraft a clear and professional email to notify about sample deficiencies.\nInstructions:\n\nBegin with a polite greeting such as \"Hello,\"\nProvide brief context that this is a routine sample inventory check\nList the domains with deficits in a clear format with specific shortfall amounts\nRequest immediate action to address the deficiencies\nSpecify a reasonable timeline for resolution (e.g., \"within the next 48 hours\")\nUse a professional, concise, and helpful tone\nClose with a polite thank you and \"Best regards\"\nDo not reference AI, automation, or personal names\n\nInput:\nYou will receive a deficit message like this:\n\"The following domains currently have a deficit in their required number of samples:\n\nStockpile 2 (SP2): 1 sample short\nStockpile 6 (SP6): 1 sample short\"\n\nYour output should be an email like this:\nHello,\nFollowing our Waste report check, we have identified deficiencies in the required number of samples for the following domains:\n\nStockpile 2 (SP2): 1 sample short\nStockpile 6 (SP6): 1 sample short\n\nPlease address these sample deficiencies within the next 48 hours to ensure compliance with our sampling requirements.\nThank you for your prompt attention to this matter.\nBest regards\nUse only the deficit information provided. Do not include names, sign-offs, or any information not specified above."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.1,"position":[208,-32],"id":"89b1d897-b1b0-4a61-ad3d-3170820d16c4","name":"AI Agent8"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1","mode":"list","cachedResultName":"gpt-4.1"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[288,192],"id":"7321474b-4487-4a9f-88bb-b96045eb1de2","name":"OpenAI Chat Model8","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"sendTo":"shreyansh@gammastack.com","subject":"Urgent Action Required: Domain Deficit Notification","message":"={{ $json.output }}","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[560,80],"id":"87f3a86f-117b-4a6d-8f1e-7c5a20ba4238","name":"Send a message2","webhookId":"fab9e627-6985-4ec3-a4e8-a8a7abc99d05","credentials":{"gmailOAuth2":{"id":"2GLRzkgXkIxgIJKL","name":"Gmail account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1e826ced-1df7-48f2-b79b-ccf88d0963b7","leftValue":"={{ $json.output }}","rightValue":"[]","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1264,-176],"id":"c815f6a9-b487-4798-8126-20bd8a757412","name":"If4"},{"parameters":{"operation":"pdf","binaryPropertyName":"data0","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-1616,512],"id":"eb334bfa-8cf5-437b-9898-bc34c7379a49","name":"Extract from File"},{"parameters":{"assignments":{"assignments":[{"id":"259e19c7-f987-44ed-84ad-d10a17dedccf","name":"output","value":"I ran into some issues with the file you uploaded","type":"string"},{"id":"0ed44699-88d7-4178-8faf-d098da6b105d","name":"passed","value":false,"type":"boolean"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1040,-272],"id":"cf5311d3-c35f-41be-957b-b9c3932be8d2","name":"Edit Fields6"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-1840,-80],"id":"c7b7112c-25ec-4f69-93ef-bf6522bb9fd8","name":"When clicking ‘Execute workflow’"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"AI Agent6","type":"main","index":0}]]},"AI Agent3":{"main":[[{"node":"If2","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"AI Agent3","type":"ai_languageModel","index":0}]]},"Code3":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code4":{"main":[[{"node":"Code5","type":"main","index":0}]]},"AI Agent4":{"main":[[{"node":"If1","type":"main","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"AI Agent4","type":"ai_languageModel","index":0}]]},"Code5":{"main":[[{"node":"AI Agent4","type":"main","index":0}]]},"If1":{"main":[[{"node":"Edit Fields3","type":"main","index":0}],[{"node":"AI Agent5","type":"main","index":0}]]},"AI Agent5":{"main":[[{"node":"Send a message1","type":"main","index":0}]]},"OpenAI Chat Model5":{"ai_languageModel":[[{"node":"AI Agent5","type":"ai_languageModel","index":0}]]},"Send a message1":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Edit Fields3":{"main":[[{"node":"Respond to Webhook3","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"Respond to Webhook1","type":"main","index":0}]]},"If2":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}],[{"node":"Code3","type":"main","index":0}]]},"AI Agent6":{"main":[[{"node":"If4","type":"main","index":0}]]},"OpenAI Chat Model6":{"ai_languageModel":[[{"node":"AI Agent6","type":"ai_languageModel","index":0}]]},"Code6":{"main":[[{"node":"Code7","type":"main","index":0}]]},"Code7":{"main":[[{"node":"Code8","type":"main","index":0}]]},"AI Agent7":{"main":[[{"node":"If3","type":"main","index":0}]]},"OpenAI Chat Model7":{"ai_languageModel":[[{"node":"AI Agent7","type":"ai_languageModel","index":0}]]},"Code8":{"main":[[{"node":"AI Agent7","type":"main","index":0}]]},"If3":{"main":[[{"node":"Edit Fields5","type":"main","index":0}],[{"node":"AI Agent8","type":"main","index":0}]]},"Edit Fields4":{"main":[[]]},"Edit Fields5":{"main":[[]]},"AI Agent8":{"main":[[{"node":"Send a message2","type":"main","index":0}]]},"OpenAI Chat Model8":{"ai_languageModel":[[{"node":"AI Agent8","type":"ai_languageModel","index":0}]]},"Send a message2":{"main":[[{"node":"Edit Fields4","type":"main","index":0}]]},"If4":{"main":[[{"node":"Edit Fields6","type":"main","index":0}],[{"node":"Code6","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"AI Agent3","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"AI Agent6","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"26ca771e-562c-4026-996e-058706e9fcdf","triggerCount":1,"tags":[]}