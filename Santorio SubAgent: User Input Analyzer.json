{"createdAt":"2025-04-30T06:23:42.403Z","updatedAt":"2025-07-17T06:24:43.866Z","id":"ekgXDtFJuJLY3LFT","name":"Santorio SubAgent: User Input Analyzer","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.1,"position":[900,-20],"id":"37224a33-884f-44e7-ad5a-9d1842e46a32","name":"Embeddings OpenAI3","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"assignments":{"assignments":[{"id":"96c6f213-ce90-46d4-aade-2ac27853dbf0","name":"questions","value":"={{ $json.document.pageContent }}","type":"string"},{"id":"f63becb3-0413-4bbb-bbd7-673f68d3b4a0","name":"score","value":"={{ $json.score }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1160,-160],"id":"d5eae67d-26ef-4c1b-b7de-c73c96df5fcf","name":"Set Vector DB data"},{"parameters":{"tableId":"Relevent User Inputs","fieldsUi":{"fieldValues":[{"fieldId":"relevent_question","fieldValue":"={{ $fromAI(\"add_relevent_questions\",\"store the corresponding question from vector db to which the user information is most relevent\") }}"},{"fieldId":"user_information","fieldValue":"={{ $fromAI(\"add_user_inputs\",\"store the relevent user important informations\") }}"},{"fieldId":"userID","fieldValue":"={{ $('When Executed by Another Workflow').item.json.userID }}"},{"fieldId":"file_source","fieldValue":"=https://api.telegram.org/file/bot7241872400:AAEjw-YYvUSCFawfYALHQoNAZd2flCoHZUQ/{{ $('When Executed by Another Workflow').item.json.file_source }}"}]}},"type":"n8n-nodes-base.supabaseTool","typeVersion":1,"position":[1600,-20],"id":"7a12642c-392b-4be4-a207-d871929f692b","name":"Add row into Supabase","credentials":{"supabaseApi":{"id":"icQbacGqkQx5nwnQ","name":"relevant-user inputs Harshit Account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[940,320],"id":"85951a16-aceb-49fd-9e11-dba3063d5e2d","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"aggregate":"aggregateAllItemData","include":"specifiedFields","fieldsToInclude":"Category Name,Categ_Description","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[160,-160],"id":"9cf11c6b-4ad1-4530-96e0-5293fad1d90c","name":"Aggregate3"},{"parameters":{"workflowInputs":{"values":[{"name":"text"},{"name":"userID","type":"number"},{"name":"file_source"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-360,-160],"id":"25ce88c8-ff93-44fc-ba17-f0023b0e5195","name":"When Executed by Another Workflow"},{"parameters":{"documentId":{"__rl":true,"value":"1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4","mode":"list","cachedResultName":"Input agent_categories","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-60,-160],"id":"2c2d4c3f-6f45-42fa-a3e8-7196f3725f38","name":"Get Input Categoiries","credentials":{"googleSheetsOAuth2Api":{"id":"rVLVpC5FEF6wrTch","name":"Google Sheets account"}}},{"parameters":{"promptType":"define","text":"={{ $('When Executed by Another Workflow').item.json.text }}","options":{"systemMessage":"=Role Your Job is to find the relevant categories from user chat Input \nand only return the name of the category from there mentioned category\nCategoies :: {{ $json.data.toJsonString() }}\n\n\noutput \nonly the name of category which mentioned above nothing else \nInstruction :: Always Share only Single category not multiple"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[380,-160],"id":"05d59eff-36e1-4e53-8840-a3f3f6305c42","name":"Grouped inputs into categories"},{"parameters":{"mode":"load","pineconeIndex":{"__rl":true,"value":"san-inputs","mode":"list","cachedResultName":"san-inputs"},"prompt":"=get relevant matched document :: {{ $('When Executed by Another Workflow').item.json.text }}","topK":20,"options":{"pineconeNamespace":"={{ $json.output }}"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[800,-160],"id":"b12cea6d-1e12-463b-93a2-5dfc056733af","name":"Find mathed inputs with questions","alwaysOutputData":true,"credentials":{"pineconeApi":{"id":"EnfM5lZWClj8IYRr","name":"harshit-pinecone-account"}}},{"parameters":{"promptType":"define","text":"=inputs/questions :: {{ $json.questions }}\nscore :: {{ $json.score }}\nuserInputs :: {{ $('When Executed by Another Workflow').item.json.text }}","options":{"systemMessage":"=Role: you are an excellent analytical agent, your job is to carefully analyse user's Health Inputs and identify whether they have relevent information corresponding to the questions coming from vector db if the information is relevent and correctly answering the questions then store the information along with relevent question into suprabase Database otherwise respond with the information is not relevent.\n\nYour soul job is to store the only relevent and acurrate information along with the corresponding question into suprabase db.\n\nRemember you need to verify that question is correctly being answered from the provided user inputs, and only those inputs has to be stored into the suprabase db.\n\nRemeber Do not assume any thing from you side use only provided data\n\nDo not store extra things just store the value which matehed with questions\nDo not add any markdown ** ## and others "}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[1360,-160],"id":"bd3b59fe-788a-492a-9b19-a15b6de4d482","name":"Store Each Inputs"},{"parameters":{"content":"## üìÑ Get Input Categories (read: sheet) and aggregate\n \n","height":240,"width":420,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-100,-240],"id":"93fa1e4c-bacf-47b6-b680-7fb4eb7f80ff","name":"Sticky Note"},{"parameters":{"content":"## üîÅ When Executed by Another Workflow","height":240,"width":420,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-560,-240],"id":"0f04a22c-f507-4df7-97dd-6f65e951df78","name":"Sticky Note1"},{"parameters":{"content":"## ü§ñ Grouped Inputs into Categories (Tools Agent)\n\n Classifies and organizes input data into predefined categories using the connected chat model.\n\n\n","height":400,"width":380,"color":2},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[340,-340],"id":"ba8a3351-2bb7-45c1-ba9a-6dc38a83f070","name":"Sticky Note2"},{"parameters":{"content":"## üîç Find Matched Inputs with Questions\nEmbedding matching node\n\nConverts inputs into embeddings and compares them with predefined questions to find similarities.\n\n\n\n","height":460,"width":380},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[740,-340],"id":"9bffdab7-a7be-4081-abe9-636e48c0ee2c","name":"Sticky Note3"},{"parameters":{"content":"## ü§ñ Store Each Inputs (Tools Agent)\nAI Agent node (with OpenAI)\n\nProcesses and stores each final input using AI and connected tools (like Supabase).\n\n","height":460,"width":440,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1280,-340],"id":"56d3db93-27fe-4ddf-870c-6fa9b4ae7f87","name":"Sticky Note4"},{"parameters":{"content":"## Here‚Äôs a final concise and professional description for your entire workflow:\n### ‚úÖ **Workflow Description**\n\nThis workflow is designed to process and store categorized data from a Google Sheet into Supabase using AI-powered classification and vector matching.\n\n1. **Triggered by Another Workflow**\n   Initiates the workflow upon being called externally.\n\n2. **Read Input Categories (Google Sheets)**\n   Fetches raw data from a Google Sheet containing input categories.\n\n3. **Aggregate Data**\n   Groups and structures the sheet data for better AI processing.\n\n4. **Classify Inputs (OpenAI Agent)**\n   Uses an AI agent to categorize the aggregated inputs into relevant groups.\n\n5. **Match with Predefined Questions (Embeddings)**\n   Generates embeddings for the inputs and compares them with existing questions to find semantic matches.\n\n6. **Prepare Vector Data**\n   Formats and organizes matched inputs for vector database storage.\n\n7. **Store Final Inputs (OpenAI Agent + Supabase)**\n   Uses AI to finalize the data and inserts each processed row into the Supabase database.\n","height":540,"width":1120,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-360,-1040],"id":"1ae3f4cd-edb2-4a36-ad32-5e295394e43f","name":"Sticky Note5"},{"parameters":{"content":"## Brain\n \n","height":240,"width":420,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[760,220],"id":"8aa817d6-9028-41c7-ac47-a03a04768bc9","name":"Sticky Note6"}],"connections":{"Embeddings OpenAI3":{"ai_embedding":[[{"node":"Find mathed inputs with questions","type":"ai_embedding","index":0}]]},"Set Vector DB data":{"main":[[{"node":"Store Each Inputs","type":"main","index":0}]]},"Add row into Supabase":{"ai_tool":[[{"node":"Store Each Inputs","type":"ai_tool","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Grouped inputs into categories","type":"ai_languageModel","index":0},{"node":"Store Each Inputs","type":"ai_languageModel","index":0}]]},"Aggregate3":{"main":[[{"node":"Grouped inputs into categories","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Get Input Categoiries","type":"main","index":0}]]},"Get Input Categoiries":{"main":[[{"node":"Aggregate3","type":"main","index":0}]]},"Grouped inputs into categories":{"main":[[{"node":"Find mathed inputs with questions","type":"main","index":0}]]},"Find mathed inputs with questions":{"main":[[{"node":"Set Vector DB data","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"25389f18-1b6f-4e40-94d0-7e9bfa8c2054","triggerCount":0,"tags":[{"createdAt":"2025-04-11T09:23:59.152Z","updatedAt":"2025-04-11T09:23:59.152Z","id":"fSbMm0PHqiXhIK0L","name":"SAN-3.0 subworkflow"}]}