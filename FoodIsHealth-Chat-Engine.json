{"createdAt":"2025-04-11T09:19:01.613Z","updatedAt":"2025-06-03T13:49:54.918Z","id":"j3nNena8Qdywkciz","name":"FoodIsHealth-Chat-Engine","active":true,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-2640,1880],"id":"e82c08ce-2a26-45b3-8fc6-7695021a27de","name":"When clicking ‘Test workflow’","disabled":true},{"parameters":{"mode":"insert","pineconeIndex":{"__rl":true,"value":"foodishealth-db","mode":"list","cachedResultName":"foodishealth-db"},"options":{"pineconeNamespace":"foodishealth"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[-1964,1680],"id":"b5cbc27e-d7e0-4024-b983-ad8438922673","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"EnfM5lZWClj8IYRr","name":"harshit-pinecone-account"}}},{"parameters":{"options":{"metadata":{"metadataValues":[{"name":"title","value":"={{ $('Code').item.json.intro.title }}"},{"name":"description","value":"={{ $('Code').item.json.intro.description }}"},{"name":"sources","value":"={{ $('Code').item.json.sources.toJsonString() }}"},{"name":"policyInterventions","value":"={{ $('Code').item.json.policyInterventions.toJsonString() }}"},{"name":"coreMetricImpactScore","value":"={{ $('Code').item.json.coreMetricImpactScore.toJsonString() }}"},{"name":"=policyMaker","value":"={{ $('Code').item.json.policyMaker.toJsonString() }}"},{"name":"supportingExperts","value":"={{ $('Code').item.json.supportingExperts.toJsonString() }}"},{"name":"primaryActions","value":"={{ $('Code').item.json.primaryActions }}"}]}}},"type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","typeVersion":1,"position":[-1860,1902.5],"id":"e1df1dee-1871-4d13-9c9e-994ae70cb0af","name":"Default Data Loader1"},{"parameters":{"jsCode":"const transformData = (data) => {\n  const output = {\n    doc_id: \"\",\n    intro: {},\n    sources: [],\n    policyInterventions: [],\n    coreMetricImpactScore: {},\n    supportSection: {},\n    policyMaker: {},\n    supportingExperts: [],\n    primaryActions: [],\n  };\n\n  data.forEach((item) => {\n    const {\n      \"Section Id\": sectionId,\n      \"Section Name\": sectionName,\n      \"Section Value\": sectionValue,\n      \"Inner Section Value\": innerSectionValue,\n    } = item;\n\n    switch (sectionId) {\n      case \"Intro\":\n        if (sectionName === \"Title\") output.intro.title = sectionValue;\n        if (sectionName === \"Description\") output.intro.description = sectionValue;\n        if (sectionName === \"doc_id\") output.doc_id = sectionValue;\n        break;\n\n      case \"Source\":\n        if (sectionName === \"source_sub_text\")\n          output.sources.push({ subText: sectionValue });\n        break;\n\n      case \"Policy Interventions\":\n        \n          output.policyInterventions.push({key: sectionName,value:sectionValue});\n      \n break;\n      case \"Core Metric/Impact Score\":\n        // Function to format value\n        const formatValue = (value) => {\n          if (!value) return '0';\n          \n          // Remove any existing symbols/formatting\n          const cleanValue = value.toString().replace(/[$,%]/g, '');\n          const num = parseFloat(cleanValue);\n          \n          if (isNaN(num)) return value.toString();\n          \n          // If value contains % or is between 0-100, treat as percentage\n          if (value.toString().includes('%') || (num <= 100 && num >= 0)) {\n            return `${num}%`;\n          }\n          \n          // If value contains $ or is large number, treat as currency\n          if (value.toString().includes(') || num >= 1000000) {\n            return `${num.toLocaleString()}`;\n          }\n          \n          return num.toLocaleString();\n        };\n\n        // Function to create clean key name\n        const createKey = (name) => {\n          return name.toLowerCase()\n                    .replace(/[^a-z0-9\\s]/g, '')\n                    .trim()\n                    .replace(/\\s+/g, '_');\n        };\n\n        // Process the metric\n        const key = createKey(sectionName);\n        output.coreMetricImpactScore[key] = {\n          value: formatValue(sectionValue),\n          description: innerSectionValue || '',\n          raw_value: sectionValue\n        };\n        break;\n\n      case \"Support Section\":\n        if (sectionName === \"Support Section Description\")\n          output.supportSection.description = sectionValue;\n        if (sectionName === \"Support Section Button Text\")\n          output.supportSection.buttonText = sectionValue;\n        if (sectionName === \"Support Section Button Link\")\n          output.supportSection.buttonLink = sectionValue;\n        break;\n\n      case \"Policy Maker\":\n       \n        if (sectionName === \"Policy Maker_Item_1_Name\")\n          output.policyMaker.name = sectionValue;\n        if (sectionName === \"Policy Maker_Item_1_Designation\")\n          output.policyMaker.designation = sectionValue;\n        break;\n\n      case \"Supporting Experts\":\n        if (sectionName.includes(\"Supporting_Expert_Item\")) {\n          const expertIndex = parseInt(sectionName.match(/\\d+/)[0]) - 1;\n          output.supportingExperts[expertIndex] =\n            output.supportingExperts[expertIndex] || {};\n        \n          if (sectionName.includes(\"Name\"))\n            output.supportingExperts[expertIndex].name = sectionValue;\n          if (\n            sectionName.includes(\"Designation\") ||\n            sectionName.includes(\"Description\")\n          ) {\n            output.supportingExperts[expertIndex].designation = sectionValue;\n          }\n        }\n        break;\n\n      case \"Primary Actions\":\n        if (sectionName.includes(\"Primary_Action_Item\")) {\n          output.primaryActions.push({ item: sectionValue });\n        }\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return output;\n};\n\n// Example usage\nconst data = items.map((i) => i.json);\nconst result = transformData(data);\nreturn result;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2200,1880],"id":"2f158c2f-ee03-4619-9a1a-f98bff8246d0","name":"Code"},{"parameters":{"chunkSize":300,"chunkOverlap":50,"options":{}},"type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","typeVersion":1,"position":[-1772,2100],"id":"21233d40-d500-4dfd-92c0-f713d35fd633","name":"Recursive Character Text Splitter1"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-1980,1900],"id":"e96b8fe2-a1fe-4384-ad68-98367729e08d","name":"Embeddings OpenAI2","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"mode":"load","pineconeIndex":{"__rl":true,"value":"foodishealth-db","mode":"list","cachedResultName":"foodishealth-db"},"prompt":"=You are the expert Pinecone data finder. Get the matched document from the database related to the user query.\nUser query: {{ $json.userQuery }}","options":{"pineconeNamespace":"foodishealth"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[-1824,2740],"id":"7c7960dd-add6-4aed-8a28-03fb20690e4e","name":"Pinecone Vector Store1","credentials":{"pineconeApi":{"id":"EnfM5lZWClj8IYRr","name":"harshit-pinecone-account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-1736,2960],"id":"3eb4bb25-37cc-4821-b45b-41af0b0c20e3","name":"Embeddings OpenAI3","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"promptType":"define","text":"={{ $('Edit Fields').item.json.userQuery }}","options":{"systemMessage":"=You are a helpful Food Is Health Ai assistant.\n\ndata : {{ $json.data.toJsonString() }}\n\nreturn the user query response based on below data Do not return the json data just simple plain text DO not include extra information only return the user query related anser\n\nIf QUery is related to greeting messaages like HI Hello How are you , \nRetun response in formal convestion of greetings \n\nIf you didnt match any answer of user quesry from provided data use the attached tool **fallbacktool** to share the response.\n\n\navialble tools\n\nFIH_FallbackTool :: For genral Question \n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[-1008,2940],"id":"243f7aa2-16b2-4002-831f-a7bb7a67d55f","name":"AI Agent2"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-980,3160],"id":"dff7f447-5235-4df5-b26d-2d98ad5f2b94","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-1448,2740],"id":"29aea7a9-a2ad-4380-b555-0ee704f24205","name":"Aggregate"},{"parameters":{"public":true,"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[-2640,2690],"id":"0bec470f-1728-4906-80fb-74f597bc539c","name":"When chat message received","webhookId":"b5629c57-7796-4cd2-9565-7c710504b0c9"},{"parameters":{"options":{"systemMessage":"=**Role: Friendly AI Agent Assistant**  \nYou are a helpful and smart assistant.  \n\ndata ::{{ $json.metadata.content.toJsonString() }}\n\n\n\n**Your Job:**  \n- Understand the user's question clearly.  \n- Provide accurate, complete answers without any extra or unnecessary information.  \n- Respond in a friendly, conversational tone.  \n- Do **not** return JSON or code unless specifically asked.\n\n---\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[-2200,2340],"id":"c9f74450-d519-4517-99a3-299f2675b820","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2112,2560],"id":"93a6c40c-a351-453f-be0e-a8bea8060bbd","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"updates":["message"],"additionalFields":{}},"type":"n8n-nodes-base.telegramTrigger","typeVersion":1.1,"position":[-2640,2490],"id":"fde0800c-69bd-4283-933b-e99b413fd436","name":"Telegram Trigger","webhookId":"50eb2340-4de5-4055-8bc0-4747c6b68ddb","credentials":{"telegramApi":{"id":"BDlPG4azueZ1lWqP","name":"FIH-Telegram-API-Token"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.message.chat.id }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true},"id":"e47a1c88-4ba4-4c5e-b5fb-471067eb3033"}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"6c2ccd59-616f-4f65-84a2-d277fd794351","leftValue":"={{ $json.metadata.isModelOpen }}","rightValue":"","operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"}},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8399e1a4-0fd0-42a1-94a0-4cacda98f51e","leftValue":"={{ $json.chatInput }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-2420,2590],"id":"927a3ec8-d021-4c20-87bc-d066aa7ec0fc","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"ea022460-d488-4ab3-8732-4847ee101bcb","name":"userQuery","value":"={{ $json[\"message\"]?.text || $json[\"chatInput\"] }}","type":"string"},{"id":"cd96ff5c-1410-47fe-a254-e410b1271b7f","name":"chatid","value":"={{ $json.message.chat.id  }}","type":"string"}]},"includeOtherFields":true,"include":"selected","options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2122,2740],"id":"d16844f8-4753-4458-bcab-a255d8113e77","name":"Edit Fields"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"8b1248bb-72bf-4493-aa03-1f27e24c5ca9","leftValue":"={{ $('Edit Fields').item.json.chatid }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1228,2740],"id":"ea365436-97f5-469d-a886-f0b8436589f3","name":"If1"},{"parameters":{"promptType":"define","text":"={{ $('Edit Fields').item.json.userQuery }}","options":{"systemMessage":"=You are a helpful Food Is Health Ai assistant.\n\ndata : {{ $json.data.toJsonString() }}\n\nreturn the user query response based on below data Do not return the json data just simple plain text DO not include extra information only return the user query related anser\n\nOnce you receive the final output from the tools, always append the following message to the response:\n\n\"Do you want to learn more? click here https://foodishealth.netlify.app/\" \n\n\nIf QUery is related to greeting messaages like HI Hello How are you , \nRetun response in formal convestion of greetings \n\nIf you didnt match any answer of user quesry from provided data use the attached tool **fallbacktool** to share the response.\n\n\naialble tools\n\nfallbacktool :: For genral Question \n\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[-1008,2440],"id":"405a7f3d-b5db-444d-a306-98e508d3223d","name":"AI Agent3"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-980,2660],"id":"13e29aeb-183c-45bc-a3f9-0b0e06e06c0c","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"name":"fallbackTool","description":"Call this tool when no matched record found from pincone db use that tool at that time ","workflowId":{"__rl":true,"value":"T4rcWrW3vRTqXS2p","mode":"list","cachedResultName":"FIH-RAG-Perplexity-Fallback"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.1,"position":[-860,2660],"id":"bd5563b0-d117-4902-8006-d45614d6c8f8","name":"fallbackTool1"},{"parameters":{"documentId":{"__rl":true,"value":"1e2dp_Ujue4JhWt7T0121e7RiGhdr3jgpQFAXEUuoRnI","mode":"list","cachedResultName":"FIH-Data-Sheet","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1e2dp_Ujue4JhWt7T0121e7RiGhdr3jgpQFAXEUuoRnI/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":1605430624,"mode":"list","cachedResultName":"A metabolic meltdown is the next pandemic","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1e2dp_Ujue4JhWt7T0121e7RiGhdr3jgpQFAXEUuoRnI/edit#gid=1605430624"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-2420,1880],"id":"77019102-43b6-4d12-9774-6db8040b57c7","name":"FIH-Data-sheet-upload","credentials":{"googleSheetsOAuth2Api":{"id":"rVLVpC5FEF6wrTch","name":"Google Sheets account"}}},{"parameters":{"chatId":"={{ $('Telegram Trigger').item.json.message.chat.id }}","text":"={{ $json.output }}","additionalFields":{}},"type":"n8n-nodes-base.telegram","typeVersion":1.2,"position":[-632,2540],"id":"34f64a74-7af7-4b7a-af47-2454ac4729be","name":"FIH-Telegram-Bot-Responder","webhookId":"bf716193-edd6-4847-9611-0c812768d520","credentials":{"telegramApi":{"id":"BDlPG4azueZ1lWqP","name":"FIH-Telegram-API-Token"}}},{"parameters":{"name":"FIH_FallbackTool","description":"Call this tool when no matched record found from pincone db use that tool at that time ","workflowId":{"__rl":true,"value":"T4rcWrW3vRTqXS2p","mode":"list","cachedResultName":"FIH-RAG-Perplexity-Fallback"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.1,"position":[-860,3160],"id":"7bce342b-feb8-4ae2-9154-10fd3e8e2389","name":"FIH_FallbackTool"}],"connections":{"When clicking ‘Test workflow’":{"main":[[{"node":"FIH-Data-sheet-upload","type":"main","index":0}]]},"Default Data Loader1":{"ai_document":[[{"node":"Pinecone Vector Store","type":"ai_document","index":0}]]},"Code":{"main":[[{"node":"Pinecone Vector Store","type":"main","index":0}]]},"Recursive Character Text Splitter1":{"ai_textSplitter":[[{"node":"Default Data Loader1","type":"ai_textSplitter","index":0}]]},"Embeddings OpenAI2":{"ai_embedding":[[{"node":"Pinecone Vector Store","type":"ai_embedding","index":0}]]},"Embeddings OpenAI3":{"ai_embedding":[[{"node":"Pinecone Vector Store1","type":"ai_embedding","index":0}]]},"Pinecone Vector Store1":{"main":[[{"node":"Aggregate","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"Aggregate":{"main":[[{"node":"If1","type":"main","index":0}]]},"When chat message received":{"main":[[{"node":"Switch","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Edit Fields","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}],[{"node":"Edit Fields","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Pinecone Vector Store1","type":"main","index":0}]]},"If1":{"main":[[{"node":"AI Agent3","type":"main","index":0}],[{"node":"AI Agent2","type":"main","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"AI Agent3","type":"ai_languageModel","index":0}]]},"fallbackTool1":{"ai_tool":[[{"node":"AI Agent3","type":"ai_tool","index":0}]]},"AI Agent3":{"main":[[{"node":"FIH-Telegram-Bot-Responder","type":"main","index":0}]]},"FIH-Data-sheet-upload":{"main":[[{"node":"Code","type":"main","index":0}]]},"FIH_FallbackTool":{"ai_tool":[[{"node":"AI Agent2","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When chat message received":[{"json":{"action":"loadPreviousSession","sessionId":"b2b240cf-109a-4e3d-a1c9-29f1638e3693","metadata":{"isModelOpen":true,"content":{"intro":{"doc_id":"Ban Big Food_001","title":"Ban Big Food from buying our health—no corporate bribes in medicine or policy. Big Food’s influence.","description":"This thesis argues that powerful food corporations wield disproportionate influence in shaping health guidelines, policies, and research. By financially contributing to health associations and research bodies, “Big Food” can sway public opinion and undermine effective regulatory measures. Eliminating conflicts of interest and increasing transparency is critical to safeguarding public health and ensuring unbiased medical guidance."},"sources":[{"subText":"Sugar, Soda, and Society: Insider Insights into Coca-Cola, the Metabolic Health Crisis, and Systemic Missteps ","link":"https://www.levels.com/podcasts/222-sugar-soda-and-society-insider-insights-into-coca-cola-the-metabolic-health-crisis-and-systemic-missteps-calley-means-casey-means"},{"subText":"Joe Rogan Experience #2210 - Calley Means & Casey Means, MD - YouTube","link":"https://www.youtube.com/watch/G0lTyhvOeJs"},{"subText":"A Personal Conversation with Dr. Oz - YouTube","link":"https://www.youtube.com/watch/Bp3aDDcrMiU"},{"subText":"Is Cancer a Food Born Illness? - YouTube","link":"https://www.youtube.com/watch/MOImHq-ttiY"},{"subText":"A Cautionary Note On Food Is Medicine","link":"https://www.healthaffairs.org/content/forefront/cautionary-note-food-medicine"}],"policyInterventions":{"enforceConflictinterestDisclosures":{"description":"Enforce strict conflict-of-interest disclosures for health associations"},"prohibitCorporateHealthDonations":{"description":"Prohibit direct corporate donations to public health bodies"},"increaseIndustryFundingTransparency":{"description":"Increase transparency of industry funding for research"},"tightenHarmfulIngredientRegulations":{"description":"Tighten import/testing regulations to block harmful ingredients"},"overseeFoodLobbyingEfforts":{"description":"Implement an independent body to oversee food industry lobbying efforts"},"labelCorporatesponsoredResearchPublications":{"description":"Require mandatory labeling of corporate sponsorship on research publications"},"limitIndustryHealthBoardRepresentation":{"description":"Create stringent rules limiting food industry representation on governmental health advisory boards"},"incentivizeOrganizationsRefusingDonations":{"description":"Provide tax incentives for organizations that refuse corporate donations linked to health policy influence"},"educatePublicOnFundingBias":{"description":"Launch public education campaigns highlighting how corporate funding can bias policy decisions"},"protectWhistleblowersExposingConflicts":{"description":"Develop robust whistleblower protections for researchers who expose corporate conflicts of interest"}},"coreMetricImpactScore":{"obesityReduction":{"value":"10.0%","description":"reduction in diet-related diseases","raw_value":0.1},"dollarSavings":{"value":"$20","description":"billion in societal economic benefits over 10 years (increased productivity, fewer sick days, lower insurance costs).","raw_value":"$20–$30"}},"supportSection":{"description":"65844 People has supported so far","buttonText":"Support This Thesis","buttonLink":"Http://www.google.com"},"policyMaker":[{"image":"https://s3-alpha-sig.figma.com/img/221e/ba89/0800dfc69c3c596366db5b22811d06e7?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=EouBm5x8eJzH8ugdbUY-qo2O10Txdr57CzowEXM09dkncUt-yxgXtVBqyxHIOg8IehBvZF8v0bd2hwIRI7Nh8N4VVRUnQoXLU0B7shUOE9oWGIE-8FNNcAjCLDD8KK9IvGY7nq0Ab4ucaFbjls5HEy5szW7M5CzsVAINkt0xcp4qvarC3cCoMYgHe8Ofq1NxV1P9tcgM40A5lfGrxv55zjVHSHKa2eNAYVi9ADveikOvPFIChEvRbrXr0sWWLPuj8OHRx3gVEDbmPUcap5RjEu9Rv8F5K5TmjBjGr9b2H9ya9PJb1D8X9fW07nenE-qisJQzuSoOKv-1CQ__","name":"Robert F. Kennedy Jr.","designation":"American Politician"}],"supportingExperts":[{"image":"https://s3-alpha-sig.figma.com/img/c70b/ab2f/c1a7d41e2c537f77e1b939994b95986b?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=H-rn6Uw-QwxOCFAksv6WvprD9VXZLfRcXceBhniI8GkBFSvjOMboih8JBi7U9FZjFS3b7t--Lj7tXzd3DTrniUjfLfpsWSXHhkoS1hfSlPq6LaDjQ6BTuRUCYxnvEYmIIHDMaV9TN~AqgvuvEH7Vc6MVjMenKENuBje-3betMXB--BwazJIg1mtUgyQH8uQgWCmoAn9nBXZYKhlbmhwcibi46RcOaZ9imdzF5XF2Q2fiVT4j3T0wPfeHZSSW1giG-rh124SyM-XsUcRpq5peWV2rFdyLq2zmufQkAc51lTCaPSO8UvoSJFmpauN0aUEsTUnnjB26C~jERHM~yCwetw__","name":"Calley Means","designation":"American physician"},{"image":"https://s3-alpha-sig.figma.com/img/c551/a0c0/27c679204c82fa4d9a02033bc7df71be?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=f0CeooZspAtp15jwppP8wewn45Ov4R5wylXyGKn59rEie-~90SEmdiJskSU94JGxYsYzArcK5vfbp8gDYyzlO~pQ-k6tK7PFg5TzBPoSkVLfLJXtstS6qoh5haVszR6sEV4fqKdl~FPq-v1IYcmPYfaZYENljpreX~QVRZjmVcY9kfwWs715bw-17AWFe8YTB77L9E4XsI3psAuRHUxrDJJEmy5WC946i~yjG73sm2ILM4HEUHZQ3emh1KmrF1TADsPPVzyPbYhB~IdKBLw2d~PpyOeDAiz6KWUsIl6MIqGtOPKdZoAW9qP10XFBj-XFSbkQWk58iHq2agYaojqNAA__","name":"Casey Means","designation":"American physician"},{"image":"https://s3-alpha-sig.figma.com/img/6cf6/8e93/de7ca5bab5d9a9ac115c8d1fb7e75aa3?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=GpwkJgaawZfP2AoxxKpK3CFq628Z7C-V0wajWg1OayQTZZ3RYapOdqZR-~caxfrQRfhkv737-PaJoNSVhI94kkMTaEoMPfNRIRWnu4lgqPkqYWmwKhQIveknuMW7YLKsoZptU8ESdshbi8EUeE1TA~kyW6O83P22loF-wZhqd-8qtOPHM-hxfsbHvv~AnX8xkCLJzGLQF4L01K7W8ruvfNUT9Q-yhxmt-7O5LF2xfalJlqXRZTKFGgq3H3NkZ~BbERREcjXmLzoRc1EIw05GdERNd-x8Xors9cJ-hTertD4yRv8zO3DtfaqCQ67jhVjsiJemL9zJT2EFLTS-a6tr2A__","name":"Dr. Oz","designation":"American politician"},{"image":"https://s3-alpha-sig.figma.com/img/f881/860f/a3a1580d0f68f257d284a2b94f20eab2?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=BIS~WfJ2HPjx5hmw1FySKFHKNUD0EeSmUBL35lL1Dox39YePmMrOfoFHbFww8goEUAmfuja5NUNbj95vjUjJsMKv5soAbCphwQwg2mEAxVb3sk-09iV2Yul8aejs6iXMHX77jF-7Sk04Ki2qObezO~Dp3J3rmhFXlFq9VFxUZLSUEpFiZK5XzJz~1p92YKUUhZOfPgoOQyprkbdWwiTAPzyBaypICWRvcbcwsMWJGJQ2T-QwddKgBs0SSs7I-esFXQ8Ao1bFU43xNOYoPuN0ZGRSlhpxs7YhlSsceBMS25wFZpFpDw7F~BPinysBlRqhxX7vj3ascBYAPglzLDfV1Q__","name":"Nicole Shanahan","designation":"Attorney"}],"primaryActions":[{"item":"Eliminate conflicts of interest in food industry influence"},{"item":"Increase transparency in health guidelines, policies, and research"},{"item":"Safeguard public health by ensuring unbiased medical guidance"}],"hotTopics":[{"username":"Elon Musk","handle":"@elonmusk","date":"2025-05-28T18:30:00.000Z","content":"Sugar is the new tobacco! Linked to obesity, diabetes, & heart disease, it’s fueling a silent health epidemic. Time for action: taxes, clear labels, & education to cut consumption and save lives. 🍭🚫 #PublicHealth #SugarCrisis"},{"username":"John Martin","handle":"@johnmartin","date":"2025-05-27T18:30:00.000Z","content":"Excess sugar = rising chronic diseases. It’s addictive, pervasive, & deadly. Like tobacco, it’s time for bold action: tax sugary products, mandate clear labels, and educate for a healthier future. 🩺🍬 #HealthCrisis #SugarEpidemic"}],"community":[{"image":"https://s3-alpha-sig.figma.com/img/993c/27b1/1d20ac68bf3dadbfcd462d93eb19b4f3?Expires=1737936000&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=pGkZGVpgT9YD3bkaP0p6o~LAdACmN0-4vzjYD3Z2y-u9QrLSZqo-U1G8KwIBv9hafsKHgAHMijDC9U8UiSxo5fE02e5TjJdm67vlGjKac9-GUgEJeWZ3LnGcm--6C2mG0P5FWa1Qw~VlTKD3ZE9dbZhxSz8J2FrpjcHZPv-lVVmKxlavr6sL3zCKWtKZXLCP~HAOfJiwWqcAJ6sQOOhsTds3GuJgFC95YCUhUZcZA3Kymo8lIzlCiCjtQdPSJSYV7VLgnejdXQ~vo2nuhAH3TSHr~ce8xcHiM-IKVlWFI8HLpY-rH~y1gwccXfNlSzqNx1VDqVx2K~qd4jO9Map9Ig__","name":"Robert Lustig","designation":"American endocrinologist"}]}}}}]},"versionId":"5e71d7d1-1829-46ae-bd17-b28ee812fd5a","triggerCount":2,"tags":[{"createdAt":"2025-04-16T15:47:30.324Z","updatedAt":"2025-04-16T15:47:30.324Z","id":"iuHH1i6Z5YT5XHkS","name":"Main"},{"createdAt":"2025-04-11T09:19:43.054Z","updatedAt":"2025-04-11T09:19:43.054Z","id":"skKeuCfO7jnSFY4z","name":"foodishealth"}]}