{"createdAt":"2025-04-11T09:33:51.847Z","updatedAt":"2025-07-16T08:05:54.043Z","id":"DRZU7oMYJSRPwM1R","name":"Santorio SubAgent: Inputs Analysis","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $('When Executed by Another Workflow').item.json.text }}","hasOutputParser":true,"options":{"systemMessage":"=Role Your Job is to find the relevant categories from user chat Input \nand only return the name of the category from there mentioned category\nCategoies :: {{ $json.data.toJsonString() }}\n\n\noutput \nInstruction :: Always Share multiple categoeirs if you found like demographic , lab other create array of that \n\ndemographics details means his name age email , address and more"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[400,325],"id":"a410f47b-3a82-496b-a3c3-f98c80347778","name":"AI Agent2"},{"parameters":{"documentId":{"__rl":true,"value":"1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4","mode":"list","cachedResultName":"Input agent_categories","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Sheet1","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1z_E6pq4ZCFAWdGKqyuPKUR5JKXAzMhZW9Y0o4EPZ6l4/edit#gid=0"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[-40,325],"id":"6535ce0a-66a4-4cc1-b4f2-d5a33c6c5d7a","name":"Google Sheets1","credentials":{"googleSheetsOAuth2Api":{"id":"rVLVpC5FEF6wrTch","name":"Google Sheets account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[428,545],"id":"5c1140a2-82f4-4b8b-8fd8-191b7bada431","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"aggregate":"aggregateAllItemData","include":"specifiedFields","fieldsToInclude":"Category Name,Categ_Description","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[180,325],"id":"e55db020-3fc6-4bbb-8302-cdd45b80da21","name":"Aggregate3"},{"parameters":{"workflowInputs":{"values":[{"name":"text"},{"name":"userID","type":"number"},{"name":"file_source"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-260,325],"id":"947a0c97-2509-49a0-81ff-025da839956e","name":"When Executed by Another Workflow"},{"parameters":{"promptType":"define","text":"={{ $('When Executed by Another Workflow').item.json.text }}","hasOutputParser":true,"options":{"systemMessage":"Extract all the medical test names (like WBC, RBC, Hemoglobin, etc.) from the following  report. Do not miss any test ‚Äî each matrix is very important. \nAlso add demographics details and other important matrix like age name email and other only keys not there values\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[1216,200],"id":"8a9b6324-499c-45bf-afa8-9e6cb9901822","name":"AI Agent1"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[1244,420],"id":"5610b2ad-50d3-4a95-9f99-b7ab7905ea39","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"jsonSchemaExample":"[\"wbc rbc\",\"hemoglobin\"]"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1364,420],"id":"c743cc17-77d5-4038-9f31-eeb0aa37e9d4","name":"Structured Output Parser"},{"parameters":{"jsCode":"const data = $input.first().json.output;\n\n// Convert [\"WBC\", \"RBC\"] into [{ value: \"WBC\" }, { value: \"RBC\" }]\nreturn data.map(item => ({ json: { value: item } }));\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-260,-360],"id":"a8b95016-329c-4dc3-8038-441cf7011283","name":"Code"},{"parameters":{"assignments":{"assignments":[{"id":"96c6f213-ce90-46d4-aade-2ac27853dbf0","name":"questions","value":"={{ $json.document.pageContent }}","type":"string"},{"id":"f63becb3-0413-4bbb-bbd7-673f68d3b4a0","name":"score","value":"={{ $json.score }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[676,-360],"id":"2b920b36-25bb-4b7f-9828-cc3b72d6d777","name":"Set Vector DB data1","disabled":true},{"parameters":{"promptType":"define","text":"=inputs/questions :: {{ $('AI Agent').item.json.output }}\nkey = {{ $('Loop Over Items').item.json.value }}\nuserInputs :: {{ $('When Executed by Another Workflow').item.json.text }}","hasOutputParser":true,"options":{"systemMessage":"=You are a smart assistant. Your job is to **save only the questions and answers related to a specific `key`** (e.g., `WBC`) into Supabase.\n\nkey ={{ $('Loop Over Items').item.json.value }}\n\n### üìù What You Get:\n- **key**: like `WBC`, `RBC`, `RDW`, etc.  \n- **questions**: a list of health-related questions  \n- **userInputs**: a report with test results  \n\n### üß† What To Do:\n1. Pick only the questions related to the given `key`.\n2. Find the correct answer from the `userInputs`.\n3. Save them like this:\n\n---\n\n### ‚ùå Ignore:\nQuestions that are not related to the key (e.g., don‚Äôt answer RDW if the key is WBC).\n\n---\n\nLet me know if you want this prompt in a format to plug into n8n or an API.\n\nCreate a array of object of macthed question and answer form key\nAdd question also in object\nAnswers should be proper with value if no then proper if yes then proper , add values of matrix is complusoory , formate of answers should be properly redable\n{\n  question:\"\",\n  answer:\"\"\n}"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[896,-360],"id":"407aa713-d578-4ad8-aece-a0a9e8053731","name":"AI Agent3"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[924,-140],"id":"4c4541b4-252a-49cf-93c4-f62344637074","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-40,-360],"id":"627d860f-6b1e-45c8-a08a-15abebf196d5","name":"Loop Over Items"},{"parameters":{"promptType":"define","text":"={{ $json.value }}","options":{"systemMessage":"=You are a helpful assistant\nrole Call vetcor store tool and find relevant matched questions from pincone db tool **stored_quetions_tool**\n\nDo not prepare any questions form ypur side \nAlways use **stored_quetions_tool**  to mathed the questions from db using that below key\n\nkey = {{ $json.value }}\n\nAnd once you got the data from tool just filterout the data based on key return that which is mathed with key not others \n\nInstuction \nHemoglobin and Hemoglobin A1c are diffrent .\nplease add only relent questiosn not others"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[196,-560],"id":"7c4f9bbc-bb4a-4e07-91b0-f55dacb37c79","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[180,-340],"id":"3a2295cf-9ef7-4dad-9299-bb1c967805fc","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[388,-140],"id":"76a438f3-6785-4678-9319-0f2b5b235c36","name":"Embeddings OpenAI","credentials":{"openAiApi":{"id":"hpvxzuW3W9YmuUCO","name":"OpenAi account"}}},{"parameters":{"mode":"retrieve-as-tool","toolName":"stored_quetions_tool","toolDescription":"=Call this tool to get questions stored in db using matched with provided key = {{ $('Loop Over Items').item.json.value }}","pineconeIndex":{"__rl":true,"value":"san-inputs","mode":"list","cachedResultName":"san-inputs"},"topK":10,"options":{"pineconeNamespace":"={{ $('Loop Over Items1').item.json.value }}"}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1.1,"position":[300,-337.5],"id":"d60e8770-54f8-4c7c-a753-09787bb075f3","name":"stored_quetions_tool","credentials":{"pineconeApi":{"id":"EnfM5lZWClj8IYRr","name":"harshit-pinecone-account"}}},{"parameters":{"schemaType":"manual","inputSchema":"[\n{\n\t\"question\": \"\",\n\t\"answer\": \"\"\n}\n]"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[1044,-140],"id":"710bd639-5dd5-4d9c-8f8b-7b8db99bd61a","name":"Structured Output Parser1"},{"parameters":{"jsCode":"const data = $input.first().json.output;\n\nreturn data\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1272,-360],"id":"8d45e5e2-b5b1-497b-8954-2e6d3729c25c","name":"Code1"},{"parameters":{"tableId":"Relevent User Inputs","fieldsUi":{"fieldValues":[{"fieldId":"relevent_question","fieldValue":"={{ $json.question }}"},{"fieldId":"user_information","fieldValue":"={{ $json.answer }}"},{"fieldId":"userID","fieldValue":"={{ $('When Executed by Another Workflow').item.json.userID }}"},{"fieldId":"file_source","fieldValue":"=https://api.telegram.org/file/bot7241872400:AAEjw-YYvUSCFawfYALHQoNAZd2flCoHZUQ/{{ $('When Executed by Another Workflow').item.json.file_source }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1492,-360],"id":"b5e1f848-3eac-48bc-88f4-694b03eca304","name":"Supabase","credentials":{"supabaseApi":{"id":"icQbacGqkQx5nwnQ","name":"relevant-user inputs Harshit Account"}}},{"parameters":{"jsonSchemaExample":"[\"Rx med\", \"Demographics\", \"Lab\"]\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[548,545],"id":"bde577ef-6599-45f0-99c1-bab7d45d470d","name":"Structured Output Parser2"},{"parameters":{"jsCode":"const data = $input.first().json.output;\n\nreturn data.map(item => ({ json: { value: item } }));"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[776,325],"id":"3d8e44d8-bf24-4062-92d8-a74d72455bd4","name":"Code2"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[996,325],"id":"0a8ee045-a5a5-432c-9ef0-46f902cd941a","name":"Loop Over Items1"},{"parameters":{"workflowId":{"__rl":true,"value":"iBZnVqrt9zbU5sQA","mode":"list","cachedResultName":"San input sub workflow"},"workflowInputs":{"mappingMode":"defineBelow","value":{"data":"={{ $json.output }}","category":"={{ $('Loop Over Items1').item.json.value }}","userInputs":"={{ $('When Executed by Another Workflow').item.json.text }}"},"matchingColumns":["data"],"schema":[{"id":"data","displayName":"data","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"removed":false},{"id":"category","displayName":"category","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"userInputs","displayName":"userInputs","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":true,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[1592,325],"id":"21fd97f7-edc1-42fd-a966-706b90291d55","name":"Execute Workflow"}],"connections":{"AI Agent2":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Google Sheets1":{"main":[[{"node":"Aggregate3","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"Aggregate3":{"main":[[{"node":"AI Agent2","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"Google Sheets1","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"Execute Workflow","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent1","type":"ai_outputParser","index":0}]]},"Set Vector DB data1":{"main":[[{"node":"AI Agent3","type":"main","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"AI Agent3","type":"ai_languageModel","index":0}]]},"Code":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"AI Agent","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"stored_quetions_tool","type":"ai_embedding","index":0}]]},"stored_quetions_tool":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"AI Agent":{"main":[[{"node":"Set Vector DB data1","type":"main","index":0}]]},"AI Agent3":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Structured Output Parser1":{"ai_outputParser":[[{"node":"AI Agent3","type":"ai_outputParser","index":0}]]},"Code1":{"main":[[{"node":"Supabase","type":"main","index":0}]]},"Supabase":{"main":[[]]},"Structured Output Parser2":{"ai_outputParser":[[{"node":"AI Agent2","type":"ai_outputParser","index":0}]]},"Code2":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[],[{"node":"AI Agent1","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e76135a2-57b9-4844-81be-0f4b6195d77e","triggerCount":0,"tags":[{"createdAt":"2025-04-11T09:23:59.152Z","updatedAt":"2025-04-11T09:23:59.152Z","id":"fSbMm0PHqiXhIK0L","name":"SAN-3.0 subworkflow"}]}