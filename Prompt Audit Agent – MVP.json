{"createdAt":"2025-08-14T16:35:07.650Z","updatedAt":"2025-08-15T19:32:21.706Z","id":"uw97BCmjPO4GgO7U","name":"Prompt Audit Agent â€“ MVP","active":false,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"prompt-audit","responseMode":"responseNode","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2.1,"position":[0,-96],"id":"3e26b300-6000-4b7b-bbdb-a8334787ea47","name":"Webhook","webhookId":"82941a55-e4d1-4f2d-803c-ee5a48693615"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o","mode":"list","cachedResultName":"GPT-4O"},"messages":{"values":[{"content":"=You are a Prompt Compliance Assistant. \nYour job is to rewrite the given prompt so that it fully complies with the provided standard.\nBe explicit and ensure every requirement is met. \nDo not remove necessary content from the original unless it conflicts with the standard.\n","role":"system"},{"content":"=You are a Prompt Compliance Assistant. Your job is to rewrite the given prompt so that it fully complies with the provided standard.\n\nHere is the prompt:\n{{ $json.body.prompt }}\n\nHere is the standard:\n\n{\n  \"name\": \"Glu Prompting Standard v1.0\",\n  \"version\": \"1.0\",\n  \"sections\": [\n    {\n      \"id\": \"roles\",\n      \"rules\": [\n        \"Must include System, Developer, and User roles\"\n      ]\n    },\n    {\n      \"id\": \"objective\",\n      \"rules\": [\n        \"Must clearly state objective at start\"\n      ]\n    },\n    {\n      \"id\": \"success_criteria\",\n      \"rules\": [\n        \"Must include measurable success criteria\"\n      ]\n    },\n    {\n      \"id\": \"safety\",\n      \"rules\": [\n        \"Must include refusal/safe-completion policy\"\n      ]\n    }\n  ],\n  \"checks\": [\n    {\n      \"id\": \"has_roles\",\n      \"pattern\": \"(?is)\\\\\\\\bSystem\\\\\\\\b.*\\\\\\\\bDeveloper\\\\\\\\b.*\\\\\\\\bUser\\\\\\\\b\"\n    },\n    {\n      \"id\": \"has_objective\",\n      \"pattern\": \"(?i)objective\\\\\\\\s*:\"\n    },\n    {\n      \"id\": \"has_success_criteria\",\n      \"pattern\": \"(?i)success criteria\"\n    },\n    {\n      \"id\": \"has_safety\",\n      \"pattern\": \"(?i)(refus|safe-?completion)\"\n    }\n  ]\n}\n\nRewrite the prompt so that it meets every requirement in the standard. \nMake the rewritten prompt clear, complete, and in compliance.\n"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[400,-240],"id":"4489dcab-7879-41c1-9619-8aa851683870","name":"Message a model","credentials":{"openAiApi":{"id":"G5B8fc5uUqqLH94p","name":"OpenAi account 3"}}},{"parameters":{"jsCode":"// Hardcoded standard\nconst standard = {\n  \"name\": \"Glu Prompting Standard v1.0\",\n  \"version\": \"1.0\",\n  \"checks\": [\n    { \"id\": \"has_roles\", \"label\": \"Has Roles\", \"pattern\": \"(?is)\\\\bSystem\\\\b.*\\\\bDeveloper\\\\b.*\\\\bUser\\\\b\" },\n    { \"id\": \"has_objective\", \"label\": \"Has Objective\", \"pattern\": \"(?i)objective\\\\s*:\" },\n    { \"id\": \"has_success_criteria\", \"label\": \"Has Success Criteria\", \"pattern\": \"(?i)success criteria\" },\n    { \"id\": \"has_safety\", \"label\": \"Has Safety\", \"pattern\": \"(?i)(refus|safe-?completion)\" }\n  ]\n};\n\n// Get improved prompt from Message a Model output\nconst improvedPrompt = $json.message?.content || \"\";\n\n// Get original prompt from Webhook input\nconst originalPrompt = $items(\"Webhook\")[0].json.body?.prompt || \"\";\n\n// Run checks\nconst checks = (standard.checks || []).map(chk => {\n  const flagMatch = chk.pattern.match(/^\\(\\?([a-z]+)\\)/i);\n  let flags = \"\";\n  let pattern = chk.pattern;\n\n  if (flagMatch) {\n    flags = flagMatch[1];\n    pattern = pattern.replace(/^\\(\\?[a-z]+\\)/i, \"\");\n  }\n\n  const regex = new RegExp(pattern, flags);\n  return {\n    id: chk.id,\n    label: chk.label || chk.id,\n    pass: regex.test(improvedPrompt)\n  };\n});\n\nreturn [{\n  json: {\n    original_prompt: originalPrompt,\n    improved_prompt: improvedPrompt,\n    checks,\n    metadata: {\n      timestamp: new Date().toISOString(),\n      workflow_name: \"Prompt Audit Agent\"\n    }\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[912,-112],"id":"1ed01568-48f2-447f-b0c1-14ede545ce62","name":"Run Compliance Checks"},{"parameters":{"respondWith":"allIncomingItems","options":{}},"type":"n8n-nodes-base.respondToWebhook","typeVersion":1.4,"position":[1104,-112],"id":"6cc2ed86-b824-4673-bae3-864295fad6b9","name":"Respond to Webhook"},{"parameters":{"operation":"text","destinationKey":"prompt","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[480,-368],"id":"811d5f36-1cbe-45b6-8224-4126b607914c","name":"Extract prompt for the OpenAI model"},{"parameters":{"fileSelector":"/User/Users/vaibhavalakshmiravideshik/Downloads/prompt_gpt.txt","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[304,-368],"id":"a0ae50d5-c9f8-496e-9325-4ac5f2e1eee6","name":"Read/Write Files from Disk","alwaysOutputData":true}],"connections":{"Webhook":{"main":[[{"node":"Message a model","type":"main","index":0},{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Message a model":{"main":[[{"node":"Run Compliance Checks","type":"main","index":0}]]},"Run Compliance Checks":{"main":[[{"node":"Respond to Webhook","type":"main","index":0}]]},"Extract prompt for the OpenAI model":{"main":[[]]},"Read/Write Files from Disk":{"main":[[{"node":"Extract prompt for the OpenAI model","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"0778d638-5109-4a3a-81c6-0ce5f5e1fe1d","triggerCount":0,"tags":[]}