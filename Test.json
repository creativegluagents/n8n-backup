{"createdAt":"2025-05-12T13:30:05.380Z","updatedAt":"2025-05-12T15:22:25.553Z","id":"k6PRsc8VgZzpVeC5","name":"Test","active":false,"isArchived":false,"nodes":[{"parameters":{"resource":"execution","operation":"get","executionId":"={{ $json['execution ID'] }}","options":{"activeWorkflows":true},"requestOptions":{}},"type":"n8n-nodes-base.n8n","typeVersion":1,"position":[220,0],"id":"37d3be5b-5c2a-421e-97da-293046dc4060","name":"n8n","credentials":{"n8nApi":{"id":"Az4KLtuQj1kM1AqY","name":"n8n account"}}},{"parameters":{"jsCode":"/*\n  Given the workflow data JSON in `workflowData`, this function will recursively search\n  for all `tokenUsage` objects and return them in an array.\n*/\n\n/**\n * Recursively traverse an object/array and collect all tokenUsage entries\n * @param {Object|Array} obj - The data to traverse\n * @returns {Array<Object>} - Array of tokenUsage objects found\n */\nfunction getTokenUsageWithContext(data) {\n  const results = [];\n\n  function recurse(node, parent = null) {\n    if (Array.isArray(node)) {\n      node.forEach(item => recurse(item, parent));\n    } else if (node && typeof node === 'object') {\n      for (const [key, value] of Object.entries(node)) {\n        if (key === 'tokenUsage' && typeof value === 'object') {\n          // Save both the usage details and the full parent object\n          results.push({ tokenUsage: value, context: parent });\n        } else {\n          // Continue traversal, passing current node as the new parent\n          recurse(value, node);\n        }\n      }\n    }\n  }\n\n  recurse(data, null);\n  return results;\n}\n\n// Example usage:\n// Assuming your JSON is stored in a variable called `data`\n// const data = /* the JSON object above */;\n// const tokenUsages = getTokenUsage(data);\n// console.log('Found token usage entries:', tokenUsages);\n\n\n\nreturn getTokenUsageWithContext($input.all());"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[880,0],"id":"a2a1b02d-6914-4d60-9ee6-88ac78e2e5e5","name":"Code"},{"parameters":{"workflowInputs":{"values":[{"name":"execution ID","type":"number"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[0,0],"id":"3b40dd58-7649-4aa8-a274-21a33833ac05","name":"When Executed by Another Workflow"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"loose","version":2},"conditions":[{"id":"4c1de48c-bcbb-4e16-99d8-70ea46c33bc3","leftValue":"={{ $json.status }}","rightValue":"success","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"looseTypeValidation":true,"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[440,0],"id":"1d96e2ce-e440-4085-a4de-109bcef5b77b","name":"If"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[660,100],"id":"5ede0466-b7c8-4a2d-a263-4c17cfb16b00","name":"Wait","webhookId":"012a5212-d91a-4bd5-9425-dc674798089f"}],"connections":{"n8n":{"main":[[{"node":"If","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"n8n","type":"main","index":0}]]},"If":{"main":[[{"node":"Code","type":"main","index":0}],[{"node":"Wait","type":"main","index":0}]]},"Wait":{"main":[[{"node":"n8n","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f1d58d88-0b6a-4ca6-b8bf-3948293c1a89","triggerCount":0,"tags":[]}